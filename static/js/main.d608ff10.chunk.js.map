{"version":3,"sources":["App.js","functions.js","Questions.js","UpcomingExams.js","Quizzes.js","Notifications.js","Docs.js","ErrorPage.js","serviceWorker.js","index.js","logo.svg"],"names":["App","url","saveQuestion","updateSaveQuestion","question","description","date","subjectId","fetch","method","headers","body","JSON","stringify","DATE","QUESTION","ANSWER","SUBJECT_ID","then","response","json","responseJson","console","log","affectedRows","catch","error","saveQuiz","updateSaveQuiz","examType","subject","termCount","image","questions","SUBJECT","TERM_COUNT","EXAM_TYPE","IMAGE","upcomingExams","updateUpcomingExams","length","login","updateLogin","username","password","PHONE_NUMBER","PASSWORD","results","setAnswer","answer","previousState","currentProps","setQuestion","setSubject","Questions","state","Date","show","alert","validated","handleClose","setState","handleShow","onChange","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","target","value","dd","String","getDate","padStart","mm","getMonth","getFullYear","Functions","handleAnswer","handleQuestion","handleSubject","className","style","backgroundColor","top","left","right","height","position","src","resizeMode","alt","width","color","fontFamily","fontSize","Button","variant","onClick","this","Modal","onHide","Header","closeButton","Title","Body","Footer","Jumbotron","format","Form","noValidate","onSubmit","Group","controlId","Label","Control","type","placeholder","required","Feedback","as","Alert","onClose","dismissible","Heading","React","Component","UpcomingExams","props","exams","match","params","justifyContent","alignItems","List","items","forceUpdate","bind","map","item","i","key","ListItem","handleChange","questionType","TYPE","NAME","Quizzes","id","handleQuestions","answerA","answerB","answerC","answerD","editQuestion","handleItemClick","push","setQuestions","onReview","index","currentStep","quizzes","showAlert","_createQuiz","_prev","quiz","setQuiz","nextButton","previousButton","onItemClick","onEdit","onClickAdd","Check","label","name","renderQuestion","renderAnswers","Step1","config","bucketName","dirName","region","accessKeyId","secretAccessKey","Docs","handleTermsAndConditions","handlePrivacyPolicy","handleFAQs","handleAbout","selectorFiles","FileObject","ReactS3Client","S3","yyyy","uploadFile","data","err","Container","Row","Col","extensions","onError","errMsg","sm","ErrorPage","Boolean","window","location","hostname","Router","retrieveData","a","async","AsyncStorage","getItem","_storeData","setItem","logOut","loggedIn","handleClick","onChangeUsername","onChangePassword","setAlert","Routes","Navbar","bg","Brand","href","Nav","Link","inline","path","component","LogIn","backgroundRepeat","display","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"uSAgBeA,I,uFCbTC,EAAM,uDAi1BG,OA+BXC,aA52BJ,SAAsBC,EAAoBC,EAAUC,EAAaC,EAAMC,GACjEC,MAAM,UAAUP,EAAI,sBAAuB,CACzCQ,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,KAAMR,EACNS,SAAUX,EACVY,OAAQX,EACRY,WAAYV,MAEPW,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC9BF,MAAK,SAACG,GAETC,QAAQC,IAAIF,GAC0B,oBAA7BA,EAAaG,cACpBrB,EAAmBkB,EAAaG,iBAEjCC,OAAM,SAACC,GACRJ,QAAQI,MAAMA,OAw1BpBC,SAp1BJ,SAAkBC,EAAgBC,EAAUC,EAASC,EAAWC,EAAOzB,EAAW0B,GAE5EzB,MAAM,UAAUP,EAAI,kBAAmB,CACrCQ,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBqB,QAASJ,EACTK,WAAYJ,EACZK,UAAWP,EACXQ,MAAOL,EACPf,WAAYV,EACZQ,SAAUkB,MAETf,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC9BF,MAAK,SAACG,GAGDO,EAAeP,MAClBI,OAAM,SAACC,GACRJ,QAAQI,MAAMA,OA+zBpBY,cA3zBJ,SAAuBC,GAChB/B,MAAM,UAAUP,EAAI,sBAAuB,CACxCQ,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,sBAEjBQ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC9BF,MAAK,SAACG,GACGA,EAAamB,QACnBD,EAAoBlB,MAErBI,OAAM,SAACC,GACNJ,QAAQI,MAAMA,OA+yBtBe,MAhyBJ,SAAeC,EAAaC,EAAUC,GAEhCpC,MAAM,UAAUP,EAAI,cAAe,CACjCQ,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBgC,aAAcF,EACdG,SAAUF,MAET1B,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC9BF,MAAK,SAACG,GAELC,QAAQC,IAAIF,GAC2B,oBAAxBA,EAAa0B,SACtBL,EAAYrB,EAAa0B,YAE9BtB,OAAM,SAACC,GACRJ,QAAQI,MAAMA,QCpGxB,SAASsB,EAAUC,GACf,OAAO,SAACC,EAAeC,GACrB,OAAO,eAAKD,EAAZ,CACcD,OAAQA,KAK5B,SAASG,EAAYhD,GACjB,OAAO,SAAC8C,EAAeC,GACrB,OAAO,eAAKD,EAAZ,CACc9C,SAAUA,KAK9B,SAASiD,EAAW9C,GAChB,OAAO,SAAC2C,EAAeC,GACrB,OAAO,eAAKD,EAAZ,CACc3C,UAAWA,K,IA6NhB+C,E,2MAvNdC,MAAQ,CACNjD,KAAM,IAAIkD,KACVC,MAAM,EACNrD,SAAU,GACV6C,OAAQ,GACR1C,UAAW,EACXmD,MAAO,EACPC,WAAW,G,EAGZC,YAAc,kBAAM,EAAKC,SAAS,CAAEJ,MAAM,K,EAC1CK,WAAa,kBAAM,EAAKD,SAAS,CAAEJ,MAAM,K,EACzCM,SAAW,SAAAzD,GAAI,OAAI,EAAKuD,SAAS,CAAEvD,U,EAEnCH,mBAAqB,SAACgB,GAClBG,QAAQC,IAAI,uBAAyB,EAAKgC,MAAMG,OAEhD,EAAKG,SAAS,CAACH,MAAO,IACN,GAAZvC,EACA,EAAK0C,SAAS,CAAC1C,SAAU,YAEzB,EAAK0C,SAAS,CAAC1C,SAAU,WAG7BG,QAAQC,IAAIJ,GACZG,QAAQC,IAAI,EAAKgC,MAAMG,Q,EAGzBM,aAAe,SAACC,GACf,IAAMC,EAAOD,EAAME,cACnB,IAA6B,IAAzBD,EAAKE,gBACNH,EAAMI,iBACNJ,EAAMK,kBACNhD,QAAQC,IAAI,aACV,CACDD,QAAQC,IAAI,QACZD,QAAQC,IAAI2C,EAAKE,iBACjB9C,QAAQC,IAAI,EAAKgC,MAAMI,WACvB,EAAKE,SAASb,EAAUiB,EAAMM,OAAOC,QACrC,EAAKX,SAASb,EAAUiB,EAAMM,OAAOC,QACrClD,QAAQC,IAAI,EAAKgC,MAAMI,WACvB,IAAIc,EAAKC,OAAO,EAAKnB,MAAMjD,KAAKqE,WAAWC,SAAS,EAAG,KACnDC,EAAKH,OAAO,EAAKnB,MAAMjD,KAAKwE,WAAa,GAAGF,SAAS,EAAG,KAExDtE,EADO,EAAKiD,MAAMjD,KAAKyE,cACT,IAAMF,EAAK,IAAMJ,EACnCO,EAAU9E,aAAa,EAAKC,mBAAoB,EAAKoD,MAAMnD,SAAU,EAAKmD,MAAMN,OAAQ3C,EAAM,EAAKiD,MAAMhD,WACzGe,QAAQC,IAAI,qBAEb,EAAKsC,SAAS,CAACF,WAAW,K,EA4CjCsB,aAAe,SAAChB,GACb3C,QAAQC,IAAI0C,EAAMM,OAAOC,OACxB,EAAKX,SAASb,EAAUiB,EAAMM,OAAOC,QACrClD,QAAQC,IAAI,EAAKgC,MAAMN,S,EAG3BiC,eAAiB,SAACjB,GAChB3C,QAAQC,IAAI0C,EAAMM,OAAOC,OACxB,EAAKX,SAAST,EAAYa,EAAMM,OAAOC,QACvClD,QAAQC,IAAI,EAAKgC,MAAMnD,W,EAG1B+E,cAAgB,SAAClB,GAEf,EAAKJ,SAASR,EAAWY,EAAMM,OAAOC,QACtClD,QAAQC,IAAI,EAAKgC,MAAMhD,Y,wEAGf,IAAD,EACP,OACC,yBAAK6E,UAAU,OACX,4BAAQA,UAAU,cACf,yBAAKC,MAAO,CAACC,gBAAiB,QAASC,IAAK,GAAIC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,IAAKC,SAAU,cAE1F,4BAAKC,IAAI,WAAWC,WAAW,QAAQC,IAAI,OAAOV,UAAU,eAA5D,oBAA8E,QAA9E,sBAA4F,CAACW,MAAO,SAApG,IACA,wBAAIV,MAAO,CACTE,IAAK,GACLC,KAAM,GACNG,SAAU,WACVK,MAAO,UACPC,WAAY,gBACZC,SAAU,KANZ,uBAQA,kBAACC,EAAA,EAAD,CAAQd,MAAO,CACbE,IAAK,IACLC,KAAM,GACNG,SAAU,YAEVS,QAAQ,UAAUC,QAASC,KAAKxC,YALlC,eAQA,kBAACyC,EAAA,EAAD,CAAOlB,MAAO,CACZU,MAAO,IACPP,KAAM,GACNG,SAAU,YAEZlC,KAAM6C,KAAK/C,MAAME,KAAM+C,OAAQF,KAAK1C,aAClC,kBAAC2C,EAAA,EAAME,OAAP,CAAcC,aAAW,GACvB,kBAACH,EAAA,EAAMI,MAAP,qBAEF,kBAACJ,EAAA,EAAMK,KAAP,KACG,6BACE,kBAAC,IAAD,CACE7C,SAAUuC,KAAKvC,SACfS,MAAO8B,KAAK/C,MAAMjD,SAIzB,kBAACiG,EAAA,EAAMM,OAAP,KACE,kBAACV,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASC,KAAK1C,aAA1C,SAGA,kBAACuC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASC,KAAK1C,aAAxC,kBAKJ,kBAACkD,EAAA,EAAD,CAAWzB,MAAO,CAClBE,IAAK,IACLI,SAAU,aAGV,oCAAIN,MAAO,CACXE,IAAK,EACLI,SAAU,aAFV,QAGU,CAACK,MAAO,UAHlB,kBAIgB,IACf,kBAAC,IAAD,CAAQe,OAAO,eACdT,KAAK/C,MAAMjD,OAGX,uBAAG+E,MAAO,CACVE,IAAK,GACLI,SAAU,aAEVW,KAAK5C,OAGP,kBAACsD,EAAA,EAAD,CAAMC,YAAU,EAACtD,UAAW2C,KAAK/C,MAAMI,UAAWuD,SAAUZ,KAAKtC,cAChE,kBAACgD,EAAA,EAAKG,MAAN,CAAYC,UAAU,YACvB,kBAACJ,EAAA,EAAKK,MAAN,CAAYhC,MAAO,CAACW,MAAO,UAA3B,cACK,kBAACgB,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,GAAGhD,MAAO8B,KAAK/C,MAAMnD,SAAU2D,SAAUuC,KAAKpB,eAAgBuC,UAAQ,IACjH,kBAACT,EAAA,EAAKM,QAAQI,SAAd,CAAuBH,KAAK,WAA5B,qCAKC,kBAACP,EAAA,EAAKG,MAAN,CAAYC,UAAU,UACpB,kBAACJ,EAAA,EAAKK,MAAN,CAAYhC,MAAO,CAACW,MAAO,UAA3B,YACA,kBAACgB,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,GAAGhD,MAAO8B,KAAK/C,MAAMN,OAAQc,SAAUuC,KAAKrB,aAAcwC,UAAQ,IAC1G,kBAACT,EAAA,EAAKM,QAAQI,SAAd,CAAuBH,KAAK,WAA5B,mCAKD,kBAACP,EAAA,EAAKG,MAAN,CAAYC,UAAU,WACpB,kBAACJ,EAAA,EAAKK,MAAN,CAAYhC,MAAO,CAACW,MAAO,UAA3B,WACE,kBAACgB,EAAA,EAAKM,QAAN,CAAcK,GAAG,SAASnD,MAAO8B,KAAK/C,MAAMzB,QAASiC,SAAUuC,KAAKnB,eACpE,4BAAQX,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,UAKA,kBAAC2B,EAAA,EAAD,CAAQoB,KAAK,UAAb,gB,4BA7HD,IAAD,OAER,GADAjG,QAAQC,IAAI+E,KAAK/C,MAAMG,MAAQ,eAC3B4C,KAAK/C,MAAMG,MAAQ,EACnB,OACO,kBAACkE,EAAA,EAAD,CAAOxB,QAASE,KAAK/C,MAAMpC,SAAU0G,QAAS,kBAAM,EAAKhE,SAAS,CAACH,MAAO,KAAKoE,aAAW,GACxF,kBAACF,EAAA,EAAMG,QAAP,sB,GAvFMC,IAAMC,WCzBxBC,E,YACF,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEC5E,MAAQ,CACX6E,MAAO,IAJM,E,sEAUb,IAAD,EACa9B,KAAK6B,MAAME,MAAtBC,OACL,OACG,yBAAKlD,UAAU,OACT,4BAAQA,UAAU,cACnB,yBAAKC,MAAO,CAACC,gBAAiB,QAASC,IAAK,GAAIC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,IAAKC,SAAU,cAEjG,4BAAKC,IAAI,WAAWE,IAAI,OAAOV,UAAU,eAAzC,oBAA2D,QAA3D,sBAA0E,CAACW,MAAO,SAAlF,IACO,wBAAIV,MAAO,CACLE,IAAK,GACLC,KAAM,GACNG,SAAU,WACVK,MAAO,UACPC,WAAY,gBACZC,SAAU,KANhB,kBASI,yBAAKb,MAAO,CACVE,IAAK,IACLQ,MAAO,MACPJ,SAAU,WACV4C,eAAgB,SAChBC,WAAY,WAEhB,kBAAC,EAAD,a,GAnCYR,IAAMC,WA2C5BQ,E,YACA,WAAYN,GAAQ,IAAD,8BACjB,4CAAMA,KAOV5F,oBAAsB,SAACQ,GACnBzB,QAAQC,IAAIwB,GACZ,EAAKc,SAAS,CAAC6E,MAAO3F,IACtB,EAAK4F,eARH,EAAKpF,MAAQ,CACXmF,MAAO,IAET,EAAKnG,oBAAsB,EAAKA,oBAAoBqG,KAAzB,gBANZ,E,iFAenB5D,EAAU1C,cAAcgE,KAAK/D,uB,+BAI3B,IAAImG,EAAQpC,KAAK/C,MAAMmF,MAGvB,OAFApH,QAAQC,IAAImH,GAGL,4BAEAA,EAAMG,KAAI,SAACC,EAAMC,GAAP,OAAa,kBAAC,EAAD,CAAUC,IAAKD,EAAGvE,MAAOsE,Y,GA1B5Cd,IAAMC,WAkCnBgB,E,YACL,WAAYd,GAAQ,IAAD,8BACjB,4CAAMA,KASNe,aAAe,SAACjF,GACZ3C,QAAQC,IAAI0C,GACZ,EAAKkE,MAAMe,aAAajF,GAExB,EAAKJ,SAAS,CAACsF,aAAclF,EAAMM,OAAOC,SAX5C,EAAKjB,MAAQ,CACXxB,UAAW,EACXoH,aAAc,IAEhB,EAAKD,aAAe,EAAKA,aAAaN,KAAlB,gBAPL,E,sEAwBjB,OADYtH,QAAQC,IAAI,aAEV,4BACE,kBAACuF,EAAA,EAAD,CAAWzB,MAAO,CAEbU,MAAO,IACPL,OAAQ,MAEtB,yBAAKE,IAAKU,KAAK6B,MAAM3D,MAAMnC,MAAOgD,MAAO,CACzCU,MAAO,IACPL,OAAQ,IACRF,MAAO,IACPD,IAAK,EACLI,SAAU,cAET,wBAAIN,MAAK,aACTE,IAAK,EACLI,SAAU,WACVK,MAAO,QACPR,MAAO,KAJE,OAKF,MAEOc,KAAK6B,MAAM3D,MAAM4E,MAE7B,wBAAI/D,MAAK,aACTE,IAAK,GACLI,SAAU,WACVK,MAAO,QACPE,SAAU,GACVV,KAAM,IALG,OAMH,KAGP,6BACKc,KAAK6B,MAAM3D,MAAM6E,OAGrB,uBAAGhE,MAAO,CACVE,KAAM,GACNC,MAAO,GACPG,SAAU,WACVK,MAAO,UAJP,QAKQ,kBAAC,IAAD,CAAQe,OAAO,eACfT,KAAK6B,MAAM3D,MAAM1D,a,GAnEfkH,IAAMC,WA8EdC,I,WC5DToB,E,YACF,WAAYnB,GAAQ,IAAD,8BACjB,4CAAMA,KAiCRnE,aAAe,SAACC,GACX,IAAMC,EAAOD,EAAME,cAEpB,IAA6B,IAAzBD,EAAKE,gBACLH,EAAMI,iBACNJ,EAAMK,kBACNhD,QAAQC,IAAI,aACX,CACDD,QAAQC,IAAI,QACZD,QAAQC,IAAI2C,EAAKE,iBACjB9C,QAAQC,IAAI,EAAKgC,MAAMI,WAGvBrC,QAAQC,IAAI,EAAKgC,MAAMI,WACvB,IAAIc,EAAKC,OAAO,EAAKnB,MAAMjD,KAAKqE,WAAWC,SAAS,EAAG,KACnDC,EAAKH,OAAO,EAAKnB,MAAMjD,KAAKwE,WAAa,GAAGF,SAAS,EAAG,KACjD,EAAKrB,MAAMjD,KAAKyE,cAG3BzD,QAAQC,IAAI,qBAEb,EAAKsC,SAAS,CAACF,WAAW,KAvDd,EA8DnBuF,aAAe,SAACjF,GAtJpB,IAAmBsF,EAAI/E,EAwJnB,EAAKX,UAxJU0F,EAwJStF,EAAMM,OAAOgF,GAxJlB/E,EAwJsBP,EAAMM,OAAOC,MAvJ/C,SAACtB,EAAeC,GACnB,MAAU,aAANoG,EACO,eAAKrG,EAAZ,CACQnB,UAAWyC,IAEP,YAAN+E,EACC,eAAKrG,EAAZ,CACQrB,SAAU2C,IAEN,WAAN+E,EACC,eAAKrG,EAAZ,CACQpB,QAAS0C,IAEL,SAAN+E,EACC,eAAKrG,EAAZ,CACQlB,MAAOwC,SAFb,MA0ES,EAwEnBgF,gBAAkB,SAACvF,GA1IvB,IAAqBsF,EAAI/E,EA2IjBlD,QAAQC,IAAI0C,GACZ,EAAKJ,UA5IQ0F,EA4IatF,EAAMM,OAAOgF,GA5ItB/E,EA4I0BP,EAAMM,OAAOC,MA3I5DlD,QAAQC,IAAI,OAASgI,EAAK,aAAe/E,GAClC,SAACtB,EAAeC,GACnB,MAAU,YAANoG,EACO,eAAKrG,EAAZ,CACQ9C,SAAUoE,IAEN,gBAAN+E,EACC,eAAKrG,EAAZ,CACQiG,aAAc3E,IAEV,UAAN+E,EACC,eAAKrG,EAAZ,CACQD,OAAQuB,IAEJ,SAAN+E,EACC,eAAKrG,EAAZ,CACQlB,MAAOwC,IAEL,WAAJ+E,EACC,eAAKrG,EAAZ,CACcuG,QAASjF,IAEb,WAAJ+E,EACC,eAAKrG,EAAZ,CACcwG,QAASlF,IAEb,WAAJ+E,EACC,eAAKrG,EAAZ,CACcyG,QAASnF,IAEb,WAAJ+E,EACC,eAAKrG,EAAZ,CACc0G,QAASpF,SAFrB,MAmCS,EAmFnBqF,aAAe,SAACA,GACZ,EAAKhG,SAAS,CAACgG,aAAcA,KApFd,EAuFnBC,gBAAkB,SAAC7F,GAQf,EAAKJ,SAAS,CAAC9B,UAAW,EAAKwB,MAAMxB,UAAY,IACjDT,QAAQC,IAAI,EAAKgC,MAAMnD,SAAW,KAAO,EAAKmD,MAAMN,OAAS,KAAO,EAAKM,MAAM4F,cAC/E,IAAI/I,EAAW,CAACA,SAAU,EAAKmD,MAAMnD,SAAU6C,OAAQ,EAAKM,MAAMN,OAAQkG,aAAc,EAAK5F,MAAM4F,aAAcM,QAAS,EAAKlG,MAAMkG,QAASC,QAAS,EAAKnG,MAAMmG,QAASC,QAAS,EAAKpG,MAAMoG,QAASC,QAAS,EAAKrG,MAAMqG,SACxN3H,EAAY,EAAKsB,MAAMtB,UAC3BA,EAAU8H,KAAK3J,GACf,EAAKyD,SA/Hb,SAAsB5B,GAElB,OADAX,QAAQC,IAAI,cAAgBU,GACrB,SAACiB,EAAeC,GACnB,OAAO,eAAKD,EAAZ,CACIjB,UAAWA,KA2HD+H,CAAa/H,IAC3BX,QAAQC,IAAI,EAAKgC,MAAMtB,WACvB,EAAK4B,UArHF,SAACX,EAAeC,GACf,OAAO,eAAKD,EAAZ,CACQ9C,SAAU,GACV+I,aAAc,GACdlG,OAAQ,GACRjB,MAAO,GACPyH,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,QAAS,SAMN,EAkHnBK,SAAW,SAACC,GACR5I,QAAQC,IAAI,SAAW2I,GACvB,IAAIC,EAAc,EAAK5G,MAAM4G,YAC7BA,EAAcA,GAAe,EAAI,EAAGA,EAAc,EAClD,EAAKtG,SAAS,CACNsG,YAAaA,KAvHN,EAgSlBvG,YAAc,kBAAM,EAAKC,SAAS,CAAEJ,MAAM,KAhSxB,EAiSlBK,WAAa,kBAAM,EAAKD,SAAS,CAAEJ,MAAM,KA9RtC,EAAKF,MAAQ,CACV4G,YAAa,EACb1G,MAAM,EACN5B,SAAU,MACVC,QAAS,UACTC,UAAW,EACXC,MAAO,GACPoI,QAAS,GACTnI,UAAW,GACX7B,SAAU,GACV+I,aAAc,IACdlG,OAAQ,GACRwG,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,aAAc,CAACV,aAAc,GAAIlG,OAAQ,GAAIwG,QAAS,GAAIC,QAAS,GAAIC,QAAS,GAAIC,QAAS,GAAK5H,MAAO,GAAI5B,SAAU,IACvHiK,WAAW,EACXlJ,SAAU,EACVuC,MAAO,GAGZ,EAAK4G,YAAc,EAAKA,YAAY1B,KAAjB,gBACnB,EAAK2B,MAAQ,EAAKA,MAAM3B,KAAX,gBACb,EAAKM,aAAe,EAAKA,aAAaN,KAAlB,gBACpB,EAAKY,gBAAkB,EAAKA,gBAAgBZ,KAArB,gBACvB,EAAKkB,gBAAkB,EAAKA,gBAAgBlB,KAArB,gBACvB,EAAK1B,SAAW,EAAKA,SAAS0B,KAAd,gBAChB,EAAKhH,eAAiB,EAAKA,eAAegH,KAApB,gBA/BL,E,sEA2GftC,KAAKzC,SAAS,CAACsG,YAAa,M,iCAI5B7D,KAAKzC,SAAS,CAACsG,YAAa,M,qCAwCjBpH,GACXzB,QAAQC,IAAIwB,GACZuD,KAAKzC,SAAS,CAACH,MAAO,IAClBX,EAAQP,OAAS,EACjB8D,KAAKzC,SAAS,CAAC1C,SAAU,YAEzBmF,KAAKzC,SAAS,CAAC1C,SAAU,a,iCAK7B,IAAIZ,EAAY,EAChBe,QAAQC,IAAI+E,KAAK/C,MAAMzB,SAGnBvB,EADsB,WAAtB+F,KAAK/C,MAAMzB,QACC,EAEA,EAGhBR,QAAQC,IAAI+E,KAAK/C,MAAM1B,SAAW,IAAMyE,KAAK/C,MAAMzB,QAAU,IAAMwE,KAAK/C,MAAMxB,UAAY,IAAMuE,KAAK/C,MAAMvB,MAAQ,IAAMzB,EAAY,IAAM+F,KAAK/C,MAAMtB,WACtJ+C,EAAUrD,SAAS2E,KAAK1E,eAAgB0E,KAAK/C,MAAM1B,SAAUyE,KAAK/C,MAAMzB,QAASwE,KAAK/C,MAAMxB,UAAWuE,KAAK/C,MAAMvB,MAAOzB,EAAW+F,KAAK/C,MAAMtB,a,oCAIjJX,QAAQC,IAAI+E,KAAK/C,MAAM1B,SAAWyE,KAAK/C,MAAMzB,QAAUwE,KAAK/C,MAAMxB,UAAYuE,KAAK/C,MAAMvB,OACzF,IAAIwI,EAAO,CAAC3I,SAAUyE,KAAK/C,MAAM1B,SAAUC,QAASwE,KAAK/C,MAAMzB,QAASC,UAAWuE,KAAK/C,MAAMxB,UAAWC,MAAOsE,KAAK/C,MAAMvB,OAEvHoI,EAAU9D,KAAK/C,MAAM6G,QACzBA,EAAQL,KAAKS,GACblE,KAAKzC,SArRX,SAAiBuG,GACb,OAAO,SAAClH,EAAeC,GACrB,OAAO,eAAKD,EAAZ,CACckH,QAASA,KAkRTK,CAAQL,IACtB9I,QAAQC,IAAI+E,KAAK/C,MAAM6G,SAOrB9D,KAAKzC,SAAS,CAAEJ,MAAM,M,8BAIxB,IAAI0G,EAAc7D,KAAK/C,MAAM4G,YAE7BA,EAAcA,GAAe,EAAI,EAAGA,EAAc,EAClD7D,KAAKzC,SAAS,CACZsG,YAAaA,M,+BAsJX,IAAD,SAEE7B,EAAWhC,KAAK6B,MAAME,MAAtBC,OACL,OACM,yBAAKlD,UAAU,OACb,4BAAQA,UAAU,cAClB,yBAAKC,MAAO,CAACC,gBAAiB,QAASC,IAAK,GAAIC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,IAAKC,SAAU,cAE1F,4BAAKC,IAAI,WAAWE,IAAI,OAAOV,UAAU,eAAzC,oBAA2D,QAA3D,sBAAyE,CAACW,MAAO,SAAjF,IACD,6BACC,wBAAIV,MAAO,CAACE,IAAK,GAAIC,KAAM,GAAIG,SAAU,WAAYK,MAAO,UAAWC,WAAY,gBAAiBC,SAAU,KAA9G,WACA,2BAAIoC,EAAOiB,KAEVjD,KAAK5C,MAEN,kBAACyC,EAAA,EAAD,CAAQd,MAAO,CACRE,IAAK,IACLC,KAAM,GACNG,SAAU,YAEVS,QAAQ,UAAUC,QAASC,KAAKxC,YALvC,YAQF,kBAACyC,EAAA,EAAD,CAAOlB,MAAO,GAEd5B,KAAM6C,KAAK/C,MAAME,KAAM+C,OAAQF,KAAK1C,aAClC,kBAAC2C,EAAA,EAAME,OAAP,CAAcC,aAAW,GACvB,kBAACH,EAAA,EAAMI,MAAP,kBAEF,kBAACJ,EAAA,EAAMK,KAAP,KACG,6BAEH,kBAAC,EAAD,CACIuD,YAAa7D,KAAK/C,MAAM4G,YACxBjB,aAAc5C,KAAK4C,iBAIvB,kBAAC3C,EAAA,EAAMM,OAAP,KACE,kBAACV,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASC,KAAK1C,aAA1C,SAGC0C,KAAKoE,WACLpE,KAAKqE,iBAGR,yBAAMtF,MAAO,CACAE,IAAK,IACLQ,MAAO,MACPJ,SAAU,aAEvB,kBAAC,EAAD,CACA+C,MAAOpC,KAAK/C,MAAM6G,QAASQ,YAAatE,KAAKwD,gBAAiBN,gBAAiBlD,KAAKkD,gBAAiBL,aAAc7C,KAAK/C,MAAM4F,aAAcpH,UAAWuE,KAAK/C,MAAMxB,UAAWkI,SAAU3D,KAAK2D,SAAUJ,aAAc,kBAAM,EAAKA,gBAAgBM,YAAa7D,KAAK/C,MAAM4G,YAAalI,UAAWqE,KAAK/C,MAAMtB,UAAW4I,OAAQvE,KAAKuE,OAAQ3D,SAAUZ,KAAKY,gB,4BApRtV,IAAD,OACR,GAAIZ,KAAK/C,MAAMG,MAAQ,EAAE,CACrB,GAA0B,WAAvB4C,KAAK/C,MAAMpC,SAAuB,CACjCmF,KAAKzC,SAAS,CAACsG,YAAa,IAKhC,OAHI7D,KAAKzC,SAAS,CAAC5B,UADC,KAEhBqE,KAAKzC,SAAS,CAACzD,SAAU,GAAI+I,aAAc,IAAKlG,OAAQ,GAAIwG,QAAS,GAAIC,QAAS,GAAIC,QAAS,GAAIC,QAAS,KAC5GtD,KAAKqC,cAEF,kBAACf,EAAA,EAAD,CAAOvC,MAAO,CAACE,IAAK,IAAKI,SAAU,YAAaS,QAASE,KAAK/C,MAAMpC,SAAU0G,QAAS,kBAAM,EAAKhE,SAAS,CAACH,MAAO,KAAKoE,aAAW,GACjI,kBAACF,EAAA,EAAMG,QAAP,kBAIFzB,KAAKzC,SAAS,CAACsG,YAAa,IAKhC,OAHI7D,KAAKzC,SAAS,CAAC5B,UADC,KAEhBqE,KAAKzC,SAAS,CAACzD,SAAU,GAAI+I,aAAc,IAAKlG,OAAQ,GAAIwG,QAAS,GAAIC,QAAS,GAAIC,QAAS,GAAIC,QAAS,KAC5GtD,KAAKqC,cAEF,kBAACf,EAAA,EAAD,CAAOvC,MAAO,CAACE,IAAK,IAAKI,SAAU,YAAaS,QAASE,KAAK/C,MAAMpC,SAAU0G,QAAS,kBAAM,EAAKhE,SAAS,CAACH,MAAO,KAAKoE,aAAW,GACpI,kBAACF,EAAA,EAAMG,QAAP,+B,iCAoHGzB,KAAK/C,MAAM4G,YAG3B,OACE,kBAAChE,EAAA,EAAD,CAAQC,QAAQ,UAChBC,QAASC,KAAKgE,aADd,Y,qCAWchE,KAAK/C,MAAM4G,gB,GApRbnC,IAAMC,WAyZtBgB,E,YACA,WAAYd,GAAQ,IAAD,8BACjB,4CAAMA,KASNe,aAAe,SAACjF,GACZ3C,QAAQC,IAAI0C,GACZ,EAAKkE,MAAMe,aAAajF,GAExB,EAAKJ,SAAS,CAACsF,aAAclF,EAAMM,OAAOC,SAd7B,EAsBrBsG,WAAa,WACTxJ,QAAQC,IAAI,QApBV,EAAKgC,MAAQ,CACXxB,UAAW,EACXoH,aAAc,IAEhB,EAAKD,aAAe,EAAKA,aAAaN,KAAlB,gBAPL,E,sEA+HjB,OACc,4BACE,kBAAC9B,EAAA,EAAD,CAAWzB,MAAO,IAKd,wBAAIA,MAAO,CACXE,IAAK,EACLI,SAAU,WACVK,MAAO,UAENM,KAAK6B,MAAM3D,MAAM3C,SAAU,QAASyE,KAAK6B,MAAM3D,MAAM1C,QAAS,QAASwE,KAAK6B,MAAMpG,UAAW,UAE5F,uBAAGsD,MAAO,CACVE,IAAK,GACLI,SAAU,aAER,6BACC,kBAACqB,EAAA,EAAD,KACG,kBAACA,EAAA,EAAKG,MAAN,CAAYC,UAAU,YACpB,kBAACJ,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,WAAWhD,MAAO8B,KAAK6B,MAAM/H,SAAU2D,SAAUuC,KAAK6B,MAAMqB,mBAGpG,kBAACxC,EAAA,EAAKG,MAAN,CAAYC,UAAU,gBAClB,kBAACJ,EAAA,EAAKM,QAAN,CAAcK,GAAG,SAASnD,MAAO8B,KAAK6B,MAAMgB,aAAcpF,SAAUuC,KAAK6B,MAAMqB,iBAC/E,4BAAQhF,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,qBAGH8B,KAAKrD,UAIhB,uBAAGoC,MAAO,CACVE,IAAK,GACLI,SAAU,aAER,kBAACQ,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASC,KAAK6B,MAAM9B,SAA9C,gBACA,kBAACF,EAAA,EAAD,CAAQd,MAAO,CAACI,MAAO,EAAGE,SAAU,YAAaS,QAAQ,UAAUC,QAASC,KAAK6B,MAAM8B,UAAvF,e,6BA5ItB,IAAId,EAAe7C,KAAK6B,MAAMgB,aAI5B,OAHA7H,QAAQC,IAAI4H,GAGQ,KAAhBA,EAEA,oCACI,kBAACnC,EAAA,EAAKG,MAAN,CAAYC,UAAU,WAClB,kBAACJ,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,SAAShD,MAAO8B,KAAK6B,MAAMlF,OAAQc,SAAUuC,KAAK6B,MAAMqB,mBAE9F,kBAACxC,EAAA,EAAK+D,MAAN,CACCxD,KAAK,QACLyD,MAAM,OACNC,KAAK,uBACL1B,GAAG,SACH/E,MAAM,OACPa,MAAO,CAACW,MAAO,SACdjC,SAAUuC,KAAK6B,MAAMqB,kBAEvB,kBAACxC,EAAA,EAAK+D,MAAN,CACExD,KAAK,QACLyD,MAAM,QACNC,KAAK,uBACL1B,GAAG,SACH/E,MAAM,QACPa,MAAO,CAACW,MAAO,SACfjC,SAAUuC,KAAK6B,MAAMqB,mBAIR,KAAhBL,EAEE,oCACA,kBAACnC,EAAA,EAAKG,MAAN,CAAYC,UAAU,WACV,kBAACJ,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,WAAWhD,MAAO8B,KAAK6B,MAAMlF,OAAQc,SAAUuC,KAAK6B,MAAMqB,mBAE3G,kBAACxC,EAAA,EAAKG,MAAN,CAAYC,UAAU,WACT,kBAACJ,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,WAAWhD,MAAO8B,KAAK6B,MAAMlF,OAAQc,SAAUuC,KAAK6B,MAAMqB,mBAE7G,kBAACxC,EAAA,EAAKG,MAAN,CAAYC,UAAU,WACT,kBAACJ,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,WAAWhD,MAAO8B,KAAK6B,MAAMlF,OAAQc,SAAUuC,KAAK6B,MAAMqB,mBAE7G,kBAACxC,EAAA,EAAKG,MAAN,CAAYC,UAAU,WACT,kBAACJ,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,WAAWhD,MAAO8B,KAAK6B,MAAMlF,OAAQc,SAAUuC,KAAK6B,MAAMqB,mBAG7G,kBAACxC,EAAA,EAAK+D,MAAN,CACExD,KAAK,QACLyD,MAAM,IACNC,KAAK,uBACL1B,GAAG,SACH/E,MAAM,IACRa,MAAO,CAACW,MAAO,SACbjC,SAAUuC,KAAK6B,MAAMqB,kBAEvB,kBAACxC,EAAA,EAAK+D,MAAN,CACExD,KAAK,QACLyD,MAAM,IACNC,KAAK,uBACL1B,GAAG,SACH/E,MAAM,IACRa,MAAO,CAACW,MAAO,SACdjC,SAAUuC,KAAK6B,MAAMqB,kBAEtB,kBAACxC,EAAA,EAAK+D,MAAN,CACExD,KAAK,QACLyD,MAAM,IACNC,KAAK,uBACL1B,GAAG,SACH/E,MAAM,IACRa,MAAO,CAACW,MAAO,SACdjC,SAAUuC,KAAK6B,MAAMqB,kBAEtB,kBAACxC,EAAA,EAAK+D,MAAN,CACGxD,KAAK,QACLyD,MAAM,IACNC,KAAK,uBACL1B,GAAG,SACH/E,MAAM,IACTa,MAAO,CAACW,MAAO,SACZjC,SAAUuC,KAAK6B,MAAMqB,mBAMxB,oCACA,kBAACxC,EAAA,EAAKG,MAAN,CAAYC,UAAU,UACpB,kBAACJ,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,SAAShD,MAAO8B,KAAK6B,MAAMlF,OAAQc,SAAUuC,KAAK6B,MAAMqB,wB,GApH7FxB,IAAMC,WAiLvB3E,E,YACA,WAAY6E,GAAQ,IAAD,8BACjB,4CAAMA,KASVe,aAAe,SAACjF,GACZ3C,QAAQC,IAAI0C,GACZ,EAAKkE,MAAMe,aAAajF,GAExB,EAAKJ,SAAS,CAACsF,aAAclF,EAAMM,OAAOC,SAdzB,EAsBrBsG,WAAa,WACTxJ,QAAQC,IAAI,QApBV,EAAKgC,MAAQ,CACXxB,UAAW,EACXoH,aAAc,IAEhB,EAAKD,aAAe,EAAKA,aAAaN,KAAlB,gBAPL,E,4EA0BLO,GACZ,MAAmB,KAAhBA,EACQ,UACc,KAAhBA,EACE,aAEA,oB,oCAIA/I,GACV,GAA6B,KAAzBA,EAAS+I,aACV,OACI,oCACC,wCACW/I,EAASqJ,SAEpB,yCACYrJ,EAASsJ,SAErB,wCACYtJ,EAASuJ,SAErB,wCACWvJ,EAASwJ,Y,+BAyG7B,OADAtI,QAAQC,IAAI+E,KAAK6B,MAAMlG,WAEhB,oCACA,kBAACkE,EAAA,EAAD,CAAQd,MAAO,CAACI,MAAO,EAAGF,KAAM,GAAII,SAAU,YAAaS,QAAQ,UAAUC,QAASC,KAAK6B,MAAMjB,UAAjG,UAES,4BACC,kBAACJ,EAAA,EAAD,CAAWzB,MAAO,IAKf,wBAAIA,MAAO,CACPE,IAAK,EACLI,SAAU,WACVK,MAAO,UAHX,aAKaM,KAAK6B,MAAMlG,UAAU7B,UAEhC,wBAAIiF,MAAO,CACPE,IAAK,EACLI,SAAU,WACVK,MAAO,UAHX,WAKUM,KAAK6B,MAAMlG,UAAUgB,QAE7B,wBAAKoC,MAAO,CACRE,IAAK,EACLI,SAAU,WACVK,MAAO,UAHX,kBAKeM,KAAK4E,eAAe5E,KAAK6B,MAAMlG,UAAUkH,eAEvD7C,KAAK6E,cAAc7E,KAAK6B,MAAMlG,WAEjC,wBAAIoD,MAAO,CACPE,IAAK,GACLI,SAAU,WACVK,MAAO,gB,6BArInC,IAAImD,EAAe7C,KAAK6B,MAAMgB,aAI5B,OAHA7H,QAAQC,IAAI4H,GAGQ,KAAhBA,EAEI,oCACA,kBAACnC,EAAA,EAAKG,MAAN,CAAYC,UAAU,WAClB,kBAACJ,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,SAAShD,MAAO8B,KAAK6B,MAAMlF,OAAQc,SAAUuC,KAAK6B,MAAMqB,mBAE9F,kBAACxC,EAAA,EAAK+D,MAAN,CACCxD,KAAK,QACLyD,MAAM,OACNC,KAAK,uBACL1B,GAAG,SACH/E,MAAM,OACPT,SAAUuC,KAAK6B,MAAMqB,kBAEtB,kBAACxC,EAAA,EAAK+D,MAAN,CACExD,KAAK,QACLyD,MAAM,QACNC,KAAK,uBACL1B,GAAG,SACH/E,MAAM,QACPT,SAAUuC,KAAK6B,MAAMqB,mBAIR,KAAhBL,EAEE,oCACA,kBAACnC,EAAA,EAAKG,MAAN,CAAYC,UAAU,WACnB,kBAACJ,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,WAAWhD,MAAO8B,KAAK6B,MAAMlF,OAAQc,SAAUuC,KAAK6B,MAAMqB,mBAElG,kBAACxC,EAAA,EAAKG,MAAN,CAAYC,UAAU,WACrB,kBAACJ,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,WAAWhD,MAAO8B,KAAK6B,MAAMlF,OAAQc,SAAUuC,KAAK6B,MAAMqB,mBAEjG,kBAACxC,EAAA,EAAKG,MAAN,CAAYC,UAAU,WACrB,kBAACJ,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,WAAWhD,MAAO8B,KAAK6B,MAAMlF,OAAQc,SAAUuC,KAAK6B,MAAMqB,mBAEjG,kBAACxC,EAAA,EAAKG,MAAN,CAAYC,UAAU,WACrB,kBAACJ,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,WAAWhD,MAAO8B,KAAK6B,MAAMlF,OAAQc,SAAUuC,KAAK6B,MAAMqB,mBAEjG,kBAACxC,EAAA,EAAK+D,MAAN,CACExD,KAAK,QACLyD,MAAM,IACNC,KAAK,uBACL1B,GAAG,SACL/E,MAAM,IACLT,SAAUuC,KAAK6B,MAAMqB,kBAEtB,kBAACxC,EAAA,EAAK+D,MAAN,CACExD,KAAK,QACLyD,MAAM,IACNC,KAAK,uBACL1B,GAAG,SACL/E,MAAM,IACLT,SAAUuC,KAAK6B,MAAMqB,kBAEtB,kBAACxC,EAAA,EAAK+D,MAAN,CACExD,KAAK,QACLyD,MAAM,IACNC,KAAK,uBACL1B,GAAG,SACH/E,MAAM,IACPT,SAAUuC,KAAK6B,MAAMqB,kBAEtB,kBAACxC,EAAA,EAAK+D,MAAN,CACGxD,KAAK,QACLyD,MAAM,IACNC,KAAK,uBACL1B,GAAG,SACH/E,MAAM,IACNT,SAAUuC,KAAK6B,MAAMqB,mBAMxB,oCACA,kBAACxC,EAAA,EAAKG,MAAN,CAAYC,UAAU,UACpB,kBAACJ,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,SAAShD,MAAO8B,KAAK6B,MAAMlF,OAAQc,SAAUuC,KAAK6B,MAAMqB,wB,GA5I5FxB,IAAMC,WA2MxBQ,E,YACA,WAAYN,GAAQ,IAAD,8BACjB,4CAAMA,KAEC5E,MAAQ,CACXuF,KAAM,IAJO,E,sEAQX,IAAD,OACDJ,EAAQpC,KAAK6B,MAAMO,MACnBzG,EAAYqE,KAAK6B,MAAMlG,UAG3B,OAFAX,QAAQC,IAAI+E,KAAK6B,MAAMgB,cAEO,GAA1B7C,KAAK6B,MAAMgC,YAEF,4BAEAlI,EAAU4G,KAAI,SAACC,EAAMC,GAAP,OAAa,kBAAC,EAAD,CAAWC,IAAKD,EAAGvE,MAAOsE,EAAMzC,QAAS,EAAK8B,MAAMyC,YAAa3I,UAAW,EAAKkG,MAAMlG,UAAU8G,GAAI7B,SAAU,EAAKiB,MAAMjB,eAI7H,GAA1BZ,KAAK6B,MAAMgC,YAET,kBAACrD,EAAA,EAAD,CAAWzB,MAAO,IAKf,wBAAIA,MAAO,CACPE,IAAK,EACLI,SAAU,aAFd,yCAIeW,KAAK6B,MAAMlG,UAAU7B,UAElC,uBAAGiF,MAAO,CACNE,IAAK,EACLI,SAAU,aAFd,wCAIYW,KAAK6B,MAAMlG,UAAUgB,QAEhC,0EACkBqD,KAAK4E,eAAe5E,KAAK6B,MAAMlG,UAAUkH,eAlBjE,iCAoBU7C,KAAK6E,cAAc7E,KAAK6B,MAAMlG,WAEnC,uBAAGoD,MAAO,CACNE,IAAK,GACLI,SAAU,aAEhB,kBAACQ,EAAA,EAAD,CAAQd,MAAO,CAACG,KAAM,EAAGD,KAAM,GAAII,SAAU,YAAaS,QAAQ,UAAUC,QAASC,KAAK6B,MAAM0C,QAAhG,QACA,kBAAC1E,EAAA,EAAD,CAAQd,MAAO,CAACI,MAAO,EAAGF,KAAM,GAAII,SAAU,YAAaS,QAAQ,UAAUC,QAASC,KAAK6B,MAAMjB,UAAjG,YAIqB,GAA1BZ,KAAK6B,MAAMgC,YAET,qCAMN,4BAEAzB,EAAMG,KAAI,SAACC,EAAMC,GAAP,OAAa,kBAAC,EAAD,CAAUC,IAAKD,EAAGvE,MAAOsE,EAAMzC,QAAS,EAAK8B,MAAMyC,YAAaX,SAAU,EAAK9B,MAAM8B,SAAUY,OAAQ,EAAK1C,MAAM0C,OAAQ3D,SAAU,EAAKiB,MAAMjB,SAAUsC,gBAAiB,EAAKrB,MAAMqB,gBAAkBL,aAAc,EAAKhB,MAAMgB,aAAcpH,UAAW,EAAKoG,MAAMpG,oB,GAjEvRiG,IAAMC,WAiFnBmD,E,YACA,WAAYjD,GAAQ,IAAD,8BACjB,4CAAMA,KAEC5E,MAAQ,CACV1B,SAAU,GACVC,QAAS,GACTC,UAAW,EACVC,MAAO,GACR2B,WAAW,GAGZ,EAAKuF,aAAe,EAAKA,aAAaN,KAAlB,gBAXP,E,0EAeR3E,GACX3C,QAAQC,IAAI0C,EAAMM,OAAOgF,IACzBjD,KAAKzC,SAAS,CAACW,MAAOP,EAAMM,OAAOC,U,+BAqBrC,OAaM,6BACC,kBAACwC,EAAA,EAAD,KACC,kBAACA,EAAA,EAAKG,MAAN,CAAYC,UAAU,WACvB,kBAACJ,EAAA,EAAKM,QAAN,CAAcK,GAAG,SAASnD,MAAO8B,KAAK6B,MAAMrG,QAASiC,SAAUuC,KAAK6B,MAAMe,cACrE,2CACA,0CAGF,kBAAClC,EAAA,EAAKG,MAAN,CAAYC,UAAU,YACzB,kBAACJ,EAAA,EAAKM,QAAN,CAAcK,GAAG,SAASnD,MAAO8B,KAAK6B,MAAMtG,SAAUkC,SAAUuC,KAAK6B,MAAMe,cACpE,uCACA,uCACA,0CAGF,kBAAClC,EAAA,EAAKG,MAAN,CAAYC,UAAU,SACpB,kBAACJ,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,QAAQhD,MAAO8B,KAAK6B,MAAMnG,MAAO+B,SAAUuC,KAAK6B,MAAMe,sB,GApE1FlB,IAAMC,WAqHXqB,GAxCKtB,IAAMC,UAwCXqB,GCzhCTb,GAnCsBT,IAAMC,U,YAoC5B,WAAYE,GAAQ,IAAD,8BACjB,4CAAMA,KAEC5E,MAAQ,CACXuF,KAAM,IAJO,E,sEAajB,OACO,iC,GAfId,IAAMC,Y,GAyBFD,IAAMC,U,kDChD7B,IASMoD,EAAS,CACXC,WAAY,0CACZC,QAAS,OACTC,OAAS,YACTC,YAAa,uBACbC,gBAAiB,4CAiONC,E,YA5NX,WAAYxD,GACR,IAAD,8BACI,4CAAMA,KACDe,aAAe,EAAKA,aAAaN,KAAlB,gBACpB,EAAKgD,yBAA2B,EAAKA,yBAAyBhD,KAA9B,gBAChC,EAAKiD,oBAAsB,EAAKA,oBAAoBjD,KAAzB,gBAC3B,EAAKkD,WAAa,EAAKA,WAAWlD,KAAhB,gBAClB,EAAKmD,YAAc,EAAKA,YAAYnD,KAAjB,gBANvB,E,uHAeUoD,GAET1K,QAAQC,IAAIyK,K,+CAGSC,GACrB3K,QAAQC,IAAI0K,GACZ,IAAI3L,EAAO,IAAIkD,KAET0I,EAAgB,IAAIC,IAAGd,GACzB5G,EAAKC,OAAOpE,EAAKqE,WAAWC,SAAS,EAAG,KACxCC,EAAKH,OAAOpE,EAAKwE,WAAa,GAAGF,SAAS,EAAG,KAC7CwH,EAAO9L,EAAKyE,cAChBzE,EAAO8L,EAAO,IAAMvH,EAAK,IAAMJ,EAI/ByH,EACCG,WAAWJ,EAFQ,sBAGnB/K,MAAK,SAAAoL,GAAI,OAAIhL,QAAQC,IAAI+K,MACzB7K,OAAM,SAAA8K,GAAG,OAAIjL,QAAQI,MAAM6K,Q,0CAGZN,GAChB3K,QAAQC,IAAI0K,GACZ,IAAI3L,EAAO,IAAIkD,KAET0I,EAAgB,IAAIC,IAAGd,GACzB5G,EAAKC,OAAOpE,EAAKqE,WAAWC,SAAS,EAAG,KACxCC,EAAKH,OAAOpE,EAAKwE,WAAa,GAAGF,SAAS,EAAG,KAC7CwH,EAAO9L,EAAKyE,cAChBzE,EAAO8L,EAAO,IAAMvH,EAAK,IAAMJ,EAI/ByH,EACCG,WAAWJ,EAFQ,iBAGnB/K,MAAK,SAAAoL,GAAI,OAAIhL,QAAQC,IAAI+K,MACzB7K,OAAM,SAAA8K,GAAG,OAAIjL,QAAQI,MAAM6K,Q,iCAGrBN,GACP3K,QAAQC,IAAI0K,GACZ,IAAI3L,EAAO,IAAIkD,KAET0I,EAAgB,IAAIC,IAAGd,GACzB5G,EAAKC,OAAOpE,EAAKqE,WAAWC,SAAS,EAAG,KACxCC,EAAKH,OAAOpE,EAAKwE,WAAa,GAAGF,SAAS,EAAG,KAC7CwH,EAAO9L,EAAKyE,cAChBzE,EAAO8L,EAAO,IAAMvH,EAAK,IAAMJ,EAI/ByH,EACCG,WAAWJ,EAFQ,QAGnB/K,MAAK,SAAAoL,GAAI,OAAIhL,QAAQC,IAAI+K,MACzB7K,OAAM,SAAA8K,GAAG,OAAIjL,QAAQI,MAAM6K,Q,kCAGpBN,GACR3K,QAAQC,IAAI0K,GACZ,IAAI3L,EAAO,IAAIkD,KAET0I,EAAgB,IAAIC,IAAGd,GACzB5G,EAAKC,OAAOpE,EAAKqE,WAAWC,SAAS,EAAG,KACxCC,EAAKH,OAAOpE,EAAKwE,WAAa,GAAGF,SAAS,EAAG,KAC7CwH,EAAO9L,EAAKyE,cAChBzE,EAAO8L,EAAO,IAAMvH,EAAK,IAAMJ,EAI/ByH,EACCG,WAAWJ,EAFQ,SAGnB/K,MAAK,SAAAoL,GAAI,OAAIhL,QAAQC,IAAI+K,MACzB7K,OAAM,SAAA8K,GAAG,OAAIjL,QAAQI,MAAM6K,Q,+BAqC1B,IAAD,SACEjE,EAAWhC,KAAK6B,MAAME,MAAtBC,OACL,OACG,yBAAKlD,UAAU,OACZ,4BAAQA,UAAU,cAEhB,yBAAKC,MAAO,CAACC,gBAAiB,QAASC,IAAK,GAAIC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,IAAKC,SAAU,cAE1F,wBAAIN,MAAO,CACLE,IAAK,GACLC,KAAM,GACNG,SAAU,WACVK,MAAO,UACPC,WAAY,gBACZC,SAAU,KANhB,SAQC,4BAAKN,IAAI,WAAWE,IAAI,OAAOD,WAAW,QAAQT,UAAU,eAA5D,oBAA8E,QAA9E,sBAA6F,CAACW,MAAO,SAArG,IACD,yBAAKV,MAAO,CACLE,IAAK,IACLQ,MAAO,MACPJ,SAAU,WACV4C,eAAgB,SAChBC,WAAY,WAEnB,kBAACgE,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,KACG,kBAAC,aAAD,CACKC,WAAY,CAAC,OACb5I,SAAU,SAAAkI,GAAU,OAAK,EAAKL,yBAAyBK,IACvDW,QAAS,SAAAC,GAAM,OAAKvL,QAAQC,IAAI,WACnC,kBAAC4E,EAAA,EAAD,CAAQC,QAAQ,WAAhB,wBAOF,kBAACsG,EAAA,EAAD,KACA,kBAAC,aAAD,CACKC,WAAY,CAAC,OACb5I,SAAU,SAAAkI,GAAU,OAAK,EAAKJ,oBAAoBI,IACrDW,QAAS,SAAAC,GAAM,OAAKvL,QAAQC,IAAI,WAC9B,kBAAC4E,EAAA,EAAD,CAAQC,QAAQ,WAAhB,oBAIJ,kBAACsG,EAAA,EAAD,CAAKI,IAAE,GACD,kBAAC,aAAD,CACAH,WAAY,CAAC,OACb5I,SAAU,SAAAkI,GAAU,OAAK,EAAKH,WAAWG,IACzCW,QAAS,SAAAC,GAAM,OAAKvL,QAAQC,IAAI,WAChC,kBAAC4E,EAAA,EAAD,CAAQC,QAAQ,WAAhB,UAKN,kBAACsG,EAAA,EAAD,KACC,kBAAC,aAAD,CACKC,WAAY,CAAC,OACb5I,SAAU,SAAAkI,GAAU,OAAK,EAAKJ,oBAAoBI,IACrDW,QAAS,SAAAC,GAAM,OAAKvL,QAAQC,IAAI,WAC9B,kBAAC4E,EAAA,EAAD,CAAQC,QAAQ,WAAhB,oBAMJ,kBAACsG,EAAA,EAAD,KACM,kBAAC,aAAD,CACEC,WAAY,CAAC,OACb5I,SAAU,SAAAkI,GAAU,OAAK,EAAKF,YAAYE,IAC1CW,QAAS,SAAAC,GAAM,OAAKvL,QAAQC,IAAI,WAC9B,kBAAC4E,EAAA,EAAD,CAAQC,QAAQ,WAAhB,cAcnB,2BAAIkC,EAAOiB,U,GAvNJvB,IAAMC,WC9BV8E,EADG,kBAAM,+CCUJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS9E,MACvB,2D,wCCuGA+E,IA3EepF,IAAMC,U,YA4EvB,WAAYE,GAAQ,IAAD,gCACjB,4CAAMA,KA8BRkF,aAAe,0BAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAEUE,KAAaC,QAAQ,gBAF/B,OAGI,QADRjJ,EAFI,UAIP,EAAKX,SAAS,CAACsG,YAAa3F,IAC7BlD,QAAQC,IAAIiD,IALJ,uGA/BI,EA2CnBkJ,WAAa,oBAAAJ,EAAAC,OAAA,2EAAAD,EAAA,MAEHE,KAAaG,QAAQ,cAAe,IAFjC,8GA3CM,EAkElBC,OAAS,oBAAAN,EAAAC,OAAA,uDACLjM,QAAQC,IAAI,WADP,oBAAA+L,EAAA,MAGIE,KAAaG,QAAQ,cAAe,IAHxC,OAIF,EAAK9J,SAAS,CAACsG,YAAa,IAC5B,EAAKxB,cALH,yGA/DN,EAAKpF,OAAL,GACG4G,YAAa,EACbxH,SAAU,GACVC,SAAU,GACViL,UAAU,GAJb,yBAKa,IALb,yBAMa,IANb,0BAOc,GAPd,GAUA,EAAKC,YAAc,EAAKA,YAAYlF,KAAjB,gBACnB,EAAKmF,iBAAmB,EAAKA,iBAAiBnF,KAAtB,gBACxB,EAAKoF,iBAAmB,EAAKA,iBAAiBpF,KAAtB,gBACxB,EAAKlG,YAAc,EAAKA,YAAYkG,KAAjB,gBACnB,EAAKyE,aAAe,EAAKA,aAAazE,KAAlB,gBACpB,EAAK8E,WAAa,EAAKA,WAAW9E,KAAhB,gBAClB,EAAKgF,OAAS,EAAKA,OAAOhF,KAAZ,gBACd,EAAKqF,SAAW,EAAKA,SAASrF,KAAd,gBApBD,E,8EAuBF3E,GACbqC,KAAKzC,SAAS,CAAClB,SAAUsB,EAAMM,OAAOC,U,uCAGzBP,GACbqC,KAAKzC,SAAS,CAACjB,SAAUqB,EAAMM,OAAOC,U,0CAwBvC8B,KAAK+G,iB,kCAGItK,GACRzB,QAAQC,IAAIwB,GACRA,EAAQP,OAAS,GACjB8D,KAAKzC,SAAS,CAACsG,YAAa,IAC5B7D,KAAKoH,eAELpH,KAAKzC,SAAS,CAACwG,UAAW,IAC1B/D,KAAKqC,iB,iCAeTrH,QAAQC,IAAI,QACZ+E,KAAKzC,SAAS,CAACwG,UAAW,M,oCAI1B/I,QAAQC,IAAI+E,KAAK/C,MAAMZ,UACvBrB,QAAQC,IAAI+E,KAAK/C,MAAMX,UACvBoC,EAAUvC,MAAM6D,KAAK5D,YAAa4D,KAAK/C,MAAMZ,SAAU2D,KAAK/C,MAAMX,Y,+BAQlE,OADAtB,QAAQC,IAAI+E,KAAK/C,MAAM4G,aACO,GAA1B7D,KAAK/C,MAAM4G,YAEH,kBAAC,GAAD,CAAO9D,QAASC,KAAKwH,YAAanL,SAAU2D,KAAK/C,MAAMZ,SAAUoL,iBAAkBzH,KAAKyH,iBAAkBC,iBAAkB1H,KAAK0H,iBAAkB3D,UAAW/D,KAAK/C,MAAM8G,UAAW4D,SAAU3H,KAAK2H,WAInM,kBAAC,GAAD,CAAQL,OAAQtH,KAAKsH,a,GAnGpB5F,IAAMC,YAyGrBiG,G,iLAEF,OACE,kBAAC,IAAD,KACC,oCACC,kBAACC,GAAA,EAAD,CAAQC,GAAG,OAAOhI,QAAQ,QACtB,kBAAC+H,GAAA,EAAOE,MAAR,CAAcC,KAAK,aAAnB,uBACF,kBAACC,GAAA,EAAD,CAAKnJ,UAAU,WACb,kBAACmJ,GAAA,EAAIC,KAAL,CAAUF,KAAK,SAAf,kBACA,kBAACC,GAAA,EAAIC,KAAL,CAAUF,KAAK,WAAf,QACA,kBAACC,GAAA,EAAIC,KAAL,CAAUF,KAAK,QAAf,SAEF,kBAACtH,EAAA,EAAD,CAAMyH,QAAM,GACd,kBAACtI,EAAA,EAAD,CAAQC,QAAQ,eAAeC,QAASC,KAAK6B,MAAMyF,QAAnD,aAGD,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOc,KAAK,aAAaC,UAAWrL,IACpC,kBAAC,IAAD,CAAOoL,KAAK,SAASC,UAAWzG,IAChC,kBAAC,IAAD,CAAOwG,KAAK,WAAWC,UAAWrF,IAClC,kBAAC,IAAD,CAAOoF,KAAK,QAAQC,UAAWhD,IAC/B,kBAAC,IAAD,CAAOgD,UAAW5B,W,GArBJ/E,IAAMC,WA8BrB2G,G,iLAaM,IAAD,EACP,OACE,oCACM,yBAAKxJ,UAAU,OACf,qCAAKQ,IAAI,WAAWE,IAAI,OAAQD,WAAY,QAAQR,MAAO,CAACM,SAAU,WAAYH,KAAM,EAAGC,MAAO,EAAGF,IAAK,EAAGQ,MAAO,QAAS8I,iBAAkB,SAASzJ,UAAU,eAAlK,MAAoL,SACpL,yBAAKC,MAAO,CAACC,gBAAiB,QAASC,IAAK,EAAGC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,IAAKC,SAAU,cAEzF,yBAAKN,MAAO,CAACyJ,QAAS,OAASvG,eAAe,SAAUC,WAAW,WAEnE,qCAAKnD,MAAO,CACGE,IAAK,GACLG,OAAQ,MACRK,MAAO,MACPJ,SAAU,WACVK,MAAO,QACPC,WAAY,gBACZC,SAAU,IACdN,IAAI,oBAAoBE,IAAI,OAAQD,WAAY,QAAQT,UAAU,eAR7E,MAQ+F,UAKnG,oCACA,yBAAKC,MAAO,CAACyJ,QAAS,OAASvG,eAAe,SAAUC,WAAW,WAEnE,yBAAKnD,MAAO,CACVE,IAAK,IACLQ,MAAO,IACPJ,SAAU,WACVK,MAAO,QACPC,WAAY,gBACZC,SAAU,KAEPI,KAAK5C,MAEV,kBAACsD,EAAA,EAAKG,MAAN,CAAYC,UAAU,YACtB,kBAACJ,EAAA,EAAKK,MAAN,CAAYhC,MAAO,CAACW,MAAO,WAC3B,kBAACgB,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,WAAWhD,MAAO8B,KAAK6B,MAAMxF,SAAUoB,SAAUuC,KAAK6B,MAAM4F,oBAElG,kBAAC/G,EAAA,EAAKG,MAAN,CAAYC,UAAU,YACnB,kBAACJ,EAAA,EAAKK,MAAN,CAAYhC,MAAO,CAACW,MAAO,WAC3B,kBAACgB,EAAA,EAAKM,SAAN,GAAcC,KAAK,OAAOC,YAAY,YAAtC,qBAAsD,YAAtD,sBAAwElB,KAAK6B,MAAMvF,UAAnF,yBAAuG0D,KAAK6B,MAAM6F,kBAAlH,KAEC,kBAAC7H,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASC,KAAK6B,MAAM9B,QAAShB,MAAO,CAACE,IAAK,GAAII,SAAU,aAAlF,gB,4BAtDK,IAAD,OACR,GAAIW,KAAK6B,MAAMkC,UAAY,EACnB,OACA,kBAACzC,EAAA,EAAD,CAAOxB,QAAQ,SAASyB,QAAS,kBAAM,EAAKM,MAAM8F,YAAYnG,aAAW,GACrE,kBAACF,EAAA,EAAMG,QAAP,iD,GANAC,IAAMC,WAoE1B8G,IAASC,OAAO,kBAAC,GAAD,MAAWC,SAASC,eAAe,SDjM7C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnO,MAAK,SAAAoO,GACjCA,EAAaC,iB,6EErInBC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.d608ff10.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\nfunction App() {\n  return (\n          \n    <div className=\"App\">\n      <header className=\"App-header\">\n          <img src=\"wall.jpg\" alt=\"Logo\"  resizeMode= 'cover' className=\"Header-logo\" alt=\"logo\" />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","//import Constants from 'expo-constants';\n//import AsyncStorage from 'react-native';\nimport React from 'react';\nconst url = 'Wetherbee-Backend-dev.us-east-2.elasticbeanstalk.com'\n//Constants.platform.ios.model != 'Simulator' ? 'Brendons-MacBook-Pro.local' : 'localhost'\nvar hasToken = false;\n\nfunction saveQuestion(updateSaveQuestion, question, description, date, subjectId){\n      fetch('http://'+url+'/admin/saveQuestion', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          DATE: date,\n          QUESTION: question,\n          ANSWER: description,\n          SUBJECT_ID: subjectId,\n        })\n            }).then((response) => response.json())\n            .then((responseJson) => {\n        //Showing response message coming from server after inserting records.\n          console.log(responseJson);\n        if (typeof responseJson.affectedRows != \"undefined\") {\n            updateSaveQuestion(responseJson.affectedRows);\n        }\n        }).catch((error) => {\n          console.error(error);\n        });\n}\n\nfunction saveQuiz(updateSaveQuiz, examType, subject, termCount, image, subjectId, questions) {\n    //Functions.saveQuiz(this.state.examType, this.state.subject, this.state.termCount, this.state.image, this.state.questions)\n      fetch('http://'+url+'/admin/saveQuiz', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          SUBJECT: subject,\n          TERM_COUNT: termCount,\n          EXAM_TYPE: examType,\n          IMAGE: image,\n          SUBJECT_ID: subjectId,\n          QUESTION: questions\n        })\n        }).then((response) => response.json())\n        .then((responseJson) => {\n    //Showing response message coming from server after inserting records.\n          \n              updateSaveQuiz(responseJson);\n        }).catch((error) => {\n          console.error(error);\n        });\n}\n\nfunction upcomingExams(updateUpcomingExams) {\n       fetch('http://'+url+'/home/upcomingExams', {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          }\n        }).then((response) => response.json())\n        .then((responseJson) => {\n              if (responseJson.length){\n            updateUpcomingExams(responseJson)\n              }\n        }).catch((error) => {\n            console.error(error);\n        });\n}\n\n//\n//router.post('/login', async (req, res) => {\n//  const conn = await connection(dbConfig).catch(e => {});\n//  const results = await query(conn, 'SELECT * FROM USERS WHERE PHONE_NUMBER = ? AND PASSWORD = BINARY ?', [req.body.PHONE_NUMBER, req.body.PASSWORD]).catch(console.log);\n//    res.status(201).send({\n//      id_token: createIdToken(req.body),\n//      access_token: createAccessToken(),\n//      results: results\n//    });\n//})\n\nfunction login(updateLogin, username, password) {\n    //Functions.saveQuiz(this.state.examType, this.state.subject, this.state.termCount, this.state.image, this.state.questions)\n      fetch('http://'+url+'/auth/login', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          PHONE_NUMBER: username,\n          PASSWORD: password,\n        })\n        }).then((response) => response.json())\n        .then((responseJson) => {\n    //Showing response message coming from server after inserting records.\n          console.log(responseJson);\n              if (typeof responseJson.results != \"undefined\") {\n                updateLogin(responseJson.results);\n              }\n        }).catch((error) => {\n          console.error(error);\n        });\n}\n\n//\n//function signUp(updateResponse, fullName, schoolName, phoneNumber, password,  email, grade, act, sat, psat) {\n//    var firstName = fullName.split(\" \")[0]\n//    var lastname = fullName.split(\" \")[1]\n//\n//    let phoneNum = phoneNumber.replace(/[-+()\\s]/g, '')\n//\n//\n//    fetch('http://'+url+'/auth/signup', {\n//      method: 'POST',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//      },\n//      body: JSON.stringify({\n//        FIRST_NAME: firstName,\n//        LAST_NAME: lastname,\n//        SCHOOL_NAME: schoolName,\n//        PHONE_NUMBER: phoneNum,\n//        PASSWORD: password,\n//        EMAIL: email,\n//        GRADE: grade,\n//        ACT_EXAM: act ? 1 : 0,\n//        SAT_EXAM: sat ? 1 : 0,\n//        PSAT_EXAM: psat ? 1 : 0,\n//        ALLOW_PARENTS: 0,\n//        IMAGE: 'https://elasticbeanstalk-us-east-2-560941559211.s3.us-east-2.amazonaws.com/images/users/default-user.png',\n//        USERNAME: '',\n//      })\n//\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//    // Showing response message coming from server after inserting records.\n//        console.log(responseJson);\n//        if (typeof responseJson.results != \"undefined\" ){\n//        updateResponse(responseJson);\n//        }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//function logIn(updateLogin, phoneNumber, password) {\n//    let phoneNum = phoneNumber.replace(/[-+()\\s]/g, '')\n//    console.log(phoneNum +' '+ password)\n//\n//    fetch('http://'+url+'/auth/login', {\n//      method: 'POST',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//      },\n//      body: JSON.stringify({\n//        PHONE_NUMBER: phoneNum,\n//        PASSWORD: password,\n//      })\n//\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//    // Showing response message coming from server after inserting records.\n//        console.log(responseJson);\n//        if (typeof responseJson.results != \"undefined\" ){\n//        updateLogin(responseJson);\n//                }//else{\n////        this.updateToken(responseJson.access_token)\n////                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//\n//UserRegistrationFunction = (fullName, schoolName, phoneNumber, email, grade, act, sat, psat, allowParents, image, username) =>{\n//\n//\n//\n// const { UserName }  = this.state ;\n// const { UserEmail }  = this.state ;\n// const { UserPassword }  = this.state ;\n//\n//\n//\n//fetch('https://reactnativecode.000webhostapp.com/user_registration.php', {\n//  method: 'POST',\n//  headers: {\n//    'Accept': 'application/json',\n//    'Content-Type': 'application/json',\n//  },\n//  body: JSON.stringify({\n//\n//    name: UserName,\n//\n//    email: UserEmail,\n//\n//    password: UserPassword\n//\n//  })\n//\n//}).then((response) => response.json())\n//      .then((responseJson) => {\n//\n//// Showing response message coming from server after inserting records.\n//        Alert.alert(responseJson);\n//\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//\n//\n//  }\n//\n//function fetchQuestions(token, updateQuestions, termId) {\n//       fetch('http://'+url+'/subjects/term?termId='+termId, {\n//          method: 'GET',\n//          headers: {\n//            'Accept': 'application/json',\n//            'Content-Type': 'application/json',\n//            'Authorization': 'Bearer ' + token\n//          }\n//        }).then((response) => response.json())\n//        .then((responseJson) => {\n//              if (responseJson.length){\n//            updateQuestions(responseJson)\n//              }\n//        }).catch((error) => {\n//            console.error(error);\n//        });\n//}\n//\n//function fetchTerms(token, updateTerms) {\n//    response = ''\n//    fetch('http://'+url+'/subjects/terms', {\n//      method: 'GET',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      }\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//            console.log(responseJson)\n//                if (responseJson.length){\n//            updateTerms(responseJson)\n//                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//function fetchWords(token, updateWords) {\n//    console.log(\"fetchWords: \"+token)\n//    response = ''\n//    fetch('http://'+url+'/home/words', {\n//      method: 'GET',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      }\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//            console.log(responseJson)\n//                if (responseJson.length){\n//            updateWords(responseJson)\n//                }else{\n//                console.log(\"---> \" + responseJson.access_token)\n//                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//\n//\n//function fetchCourses(token, updateCourses) {\n//    response = ''\n//    fetch('http://'+url+'/home/courses', {\n//      method: 'GET',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      }\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//                console.log('************************************')\n//\n//            console.log(responseJson)\n//                if (responseJson.length){\n//            updateCourses(responseJson)\n//                }else{\n//                console.log('NO RESPONSES')\n//                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//function fetchPopular(token, updatePopular) {\n//    response = ''\n//    fetch('http://'+url+'/home/popular', {\n//      method: 'GET',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      }\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//            console.log(responseJson)\n//                if (responseJson.length){\n//            updatePopular(responseJson)\n//                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//function fetchUpcomingExams(token, updateUpcomingExams) {\n//    console.log('exams => ' + token);\n//    response = ''\n//    fetch('http://'+url+'/home/upcomingExams', {\n//      method: 'GET',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      }\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//            console.log(responseJson)\n//                if (responseJson.length){\n//            updateUpcomingExams(responseJson)\n//                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//\n//function fetchQuestionsAnalytics(token, updateQuestionsAnalyitcs, userId) {\n//    response = ''\n//    fetch('http://'+url+'/home/questions?userId='+userId, {\n//      method: 'GET',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      }\n//    }).then((response) =>  response.json())\n//          .then((responseJson) => {\n//            console.log(responseJson)\n//                if (responseJson.length){\n//            updateQuestionsAnalyitcs(responseJson)\n//                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//\n//function fetchAnswersAnalytics(token, updateAnswersAnalyitcs, userId) {\n//    response = ''\n//    fetch('http://'+url+'/home/answers?userId='+userId, {\n//      method: 'GET',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      }\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//            console.log(responseJson)\n//                if (responseJson.length){\n//            updateAnswersAnalyitcs(responseJson)\n//                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//function fetchCompletedTopicList(token, updateCompletedTopicList, userId) {\n//    response = ''\n//    fetch('http://'+url+'/profile/completedTopicList?userId='+userId, {\n//      method: 'GET',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      }\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//            console.log(responseJson)\n//                if (responseJson.length){\n//            updateCompletedTopicList(responseJson)\n//                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//\n//function fetchPrizes(token, updatePrizes, userId) {\n//    response = ''\n//    fetch('http://'+url+'/profile/prizes?userId='+userId, {\n//      method: 'GET',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      }\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//            console.log(responseJson)\n//                if (responseJson.length){\n//            updatePrizes(responseJson)\n//                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//function fetchWeeklyScore(token, updateWeeklyScore, subject, userId) {\n//    fetch('http://'+url+'/analytics/weeklyScore?userId='+userId+'&subject='+subject, {\n//      method: 'GET',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      }\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//            console.log(responseJson)\n//                if (responseJson.length){\n//            updateWeeklyScore(responseJson)\n//                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//function fetchOffline(token, updateOffline, userId) {\n//    response = ''\n//    fetch('http://'+url+'/profile/offline?userId='+userId, {\n//      method: 'GET',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      }\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//            console.log(responseJson)\n//                if (responseJson.length){\n//            updateOffline(responseJson)\n//                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//function updatePhoneNumber(token, updatePhoneNumber, phonenumber, userId) {\n//\n//    let phoneNum = phonenumber.replace(/[-+()\\s]/g, '');\n//\n//    fetch('http://'+url+'/profile/updatePhoneNumber', {\n//      method: 'POST',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      },\n//      body: JSON.stringify({\n//        PHONE_NUMBER: phoneNum,\n//        USER_ID: userId,\n//      })\n//\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//    // Showing response message coming from server after inserting records.\n//        console.log(response)\n//                if (responseJson.length){\n//        updatePhoneNumber(responseJson);\n//                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//function updateUsername(token, updateUsername, username, userId) {\n//    fetch('http://'+url+'/profile/updateUsername', {\n//      method: 'POST',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      },\n//      body: JSON.stringify({\n//        USERNAME: username,\n//        USER_ID: userId,\n//      })\n//\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//    // Showing response message coming from server after inserting records.\n//        console.log(responseJson);\n//                if (responseJson.length){\n//        updateUsername(responseJson);\n//                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//function updateGrade(token, updateGrade, grade, userId) {\n//    fetch('http://'+url+'/profile/updateGrade', {\n//      method: 'POST',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      },\n//      body: JSON.stringify({\n//        GRADE: grade,\n//        USER_ID: userId,\n//      })\n//\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//    // Showing response message coming from server after inserting records.\n//        console.log(responseJson);\n//                console.log(\"===>\");\n//                if (responseJson.length){\n//        updateGrade(responseJson);\n//                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//function updatePassword(token, updatePassword, newPassword, userId, currentPassword) {\n//    fetch('http://'+url+'/profile/updatePassword', {\n//      method: 'POST',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      },\n//      body: JSON.stringify({\n//        NEW_PASSWORD: newPassword,\n//        USER_ID: userId,\n//        CURRENT_PASSWORD: currentPassword\n//      })\n//\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//    // Showing response message coming from server after inserting records.\n//        console.log(responseJson);\n//                if (responseJson.length){\n//        updatePassword(responseJson);\n//                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//function fetchNotifications(token, updateNotifications, userId) {\n//    response = ''\n//    fetch('http://'+url+'/profile/notifications?userId='+userId, {\n//      method: 'GET',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      }\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//            console.log(responseJson)\n//                if (responseJson.length){\n//            updateNotifications(responseJson)\n//                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//function updateReadOffline(token, updateReadOffline, userId) {\n//    response = ''\n//    fetch('http://'+url+'/profile/readOffline?userId='+userId, {\n//      method: 'GET',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      }\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//            console.log(responseJson)\n//                if (responseJson.length){\n//            updateReadOffline(responseJson)\n//                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//function updateName(token, updateName, fullName, userId) {\n//    var firstName = fullName.split(\" \")[0]\n//    var lastname = fullName.split(\" \")[1]\n//\n//\n//\n//    fetch('http://'+url+'/profile/updateName', {\n//      method: 'POST',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      },\n//      body: JSON.stringify({\n//        FIRST_NAME: firstName,\n//        LAST_NAME: lastname,\n//        USER_ID: userId\n//      })\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//    // Showing response message coming from server after inserting records.\n//        console.log(responseJson);\n//                if (responseJson.length){\n//        updateName(responseJson);\n//                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//function allowParents(token, updateAllowParents, userId) {\n//    fetch('http://'+url+'/profile/allowParents', {\n//      method: 'POST',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      },\n//      body: JSON.stringify({\n//        USER_ID: userId\n//      })\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//    // Showing response message coming from server after inserting records.\n//        console.log(responseJson);\n//                if (responseJson.length){\n//        updateAllowParents(responseJson);\n//                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//\n//function updateImage(token, updateImage, imageUrl, userId) {\n//    fetch('http://'+url+'/profile/updateImage', {\n//      method: 'POST',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      },\n//      body: JSON.stringify({\n//        IMAGE_URL: imageUrl,\n//        USER_ID: userId\n//      })\n//        }).then((response) => response.json())\n//          .then((responseJson) => {\n//\n//                if (responseJson.length){\n//                updateImage(responseJson);\n//                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//function saveQuiz(token, updatePrizes, name, points, subject, userId, totalQuestions, correct, incorrect, pass){\n//    var subjectInt = 0;\n//    if (subject == 'English') {\n//        subjectInt = 1\n//    }else{\n//        subjectInt = 2\n//    }\n//\n//    console.log(\"NAME: \"+name+\",points: \"+points+\",subject: \"+subjectInt+\",userId: \"+userId)\n//    fetch('http://'+url+'/subjects/updatePrize', {\n//      method: 'POST',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      },\n//      body: JSON.stringify({\n//        NAME: name,\n//        POINTS: points,\n//        USER_ID: userId,\n//        SUBJECT: subjectInt,\n//        STATUS: 'Completed Successfully.',\n//        TOTAL_QUESTIONS: totalQuestions,\n//        CORRECT: correct,\n//        INCORRECT: incorrect,\n//        PASS: pass\n//      })\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//                console.log(responseJson);\n//                if (responseJson.length){\n//                updatePrizes(responseJson);\n//                }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//function saveCompletedTopicList(token, updateCTL, term, userId){\n//    fetch('http://'+url+'/subjects/saveCompletedTopicList', {\n//      method: 'POST',\n//      headers: {\n//        'Accept': 'application/json',\n//        'Content-Type': 'application/json',\n//        'Authorization': 'Bearer ' + token\n//      },\n//      body: JSON.stringify({\n//        TERMS_ID: term,\n//        USER_ID: userId,\n//      })\n//\n//    }).then((response) => response.json())\n//          .then((responseJson) => {\n//    // Showing response message coming from server after inserting records.\n//        console.log(response)\n//            if (responseJson.length){\n//                updateCTL(responseJson);\n//            }\n//      }).catch((error) => {\n//        console.error(error);\n//      });\n//}\n//\n//function fetchLeaderboardToday(token, updateLeaderBoard){\n//fetch('http://'+url+'/leaderboard/today', {\n//    method: 'GET',\n//    headers: {\n//      'Accept': 'application/json',\n//      'Content-Type': 'application/json',\n//      'Authorization': 'Bearer ' + token\n//    }\n//  }).then((response) => response.json())\n//        .then((responseJson) => {\n//\n//          console.log(responseJson)\n////              if (responseJson.length){\n//\n//          updateLeaderBoard(responseJson)\n////              }\n//    }).catch((error) => {\n//      console.error(error);\n//    });\n//}\n//\n//function fetchLeaderboardLastWeek(token, updateLeaderBoard){\n//fetch('http://'+url+'/leaderboard/lastWeek', {\n//    method: 'GET',\n//    headers: {\n//      'Accept': 'application/json',\n//      'Content-Type': 'application/json',\n//      'Authorization': 'Bearer ' + token\n//    }\n//  }).then((response) => response.json())\n//        .then((responseJson) => {\n//          console.log(responseJson)\n//              if (responseJson.length){\n//          updateLeaderBoard(responseJson)\n//              }\n//    }).catch((error) => {\n//      console.error(error);\n//    });\n//}\n//\n//\n//function fetchLeaderboardLastMonth(token, updateLeaderBoard){\n//fetch('http://'+url+'/leaderboard/lastMonth', {\n//    method: 'GET',\n//    headers: {\n//      'Accept': 'application/json',\n//      'Content-Type': 'application/json',\n//      'Authorization': 'Bearer ' + token\n//    }\n//  }).then((response) => response.json())\n//        .then((responseJson) => {\n//              if (responseJson.length){\n//          updateLeaderBoard(responseJson)\n//              }\n//    }).catch((error) => {\n//      console.error(error);\n//    });\n//}\n//\n//function fetchLeaderboardThisMonth(token, updateLeaderBoard){\n//fetch('http://'+url+'/leaderboard/thisMonth', {\n//    method: 'GET',\n//    headers: {\n//      'Accept': 'application/json',\n//      'Content-Type': 'application/json',\n//      'Authorization': 'Bearer ' + token\n//    }\n//  }).then((response) => response.json())\n//        .then((responseJson) => {\n////              if (responseJson.length){\n//          updateLeaderBoard(responseJson)\n////              }\n//    }).catch((error) => {\n//      console.error(error);\n//    });\n//}\n//\n//function fetchLeaderboardAllTime(token, updateLeaderBoard){\n//fetch('http://'+url+'/leaderboard/allTime', {\n//    method: 'GET',\n//    headers: {\n//      'Accept': 'application/json',\n//      'Content-Type': 'application/json',\n//      'Authorization': 'Bearer ' + token\n//    }\n//  }).then((response) => response.json())\n//        .then((responseJson) => {\n//          console.log(responseJson)\n////              if (responseJson.length){\n//          updateLeaderBoard(responseJson)\n////              }\n//    }).catch((error) => {\n//      console.error(error);\n//    });\n//}\n\nexport default {\n//    signUp,\n//    logIn,\n//    fetchQuestions,\n//    fetchTerms,\n//    fetchWords,\n//    fetchCourses,\n//    fetchPopular,\n//    fetchUpcomingExams,\n//    fetchQuestionsAnalytics,\n//    fetchAnswersAnalytics,\n//    fetchCompletedTopicList,\n//    fetchPrizes,\n//    fetchOffline,\n//    updatePhoneNumber,\n//    updateUsername,\n//    updateGrade,\n//    updatePassword,\n//    fetchNotifications,\n//    updateReadOffline,\n//    updateName,\n//    allowParents,\n//    updateImage,\n//    saveQuiz,\n//    saveCompletedTopicList,\n//    fetchLeaderboardToday,\n//    fetchLeaderboardLastWeek,\n//    fetchLeaderboardLastMonth,\n//    fetchLeaderboardThisMonth,\n//    fetchLeaderboardAllTime,\n//    fetchWeeklyScore,\n    saveQuestion,\n    saveQuiz,\n    upcomingExams,\n    login\n//    hasToken\n};\n\n","import React from 'react';\nimport Calendar from 'react-calendar';\nimport { Button, Modal, Jumbotron, InputGroup, FormControl, Form, Alert } from 'react-bootstrap';\nimport Moment from 'react-moment';\nimport Functions from './functions';\n\nfunction setAnswer(answer) {\n    return (previousState, currentProps) => {\n      return { ...previousState,\n                    answer: answer,\n                };\n    };\n}\n\nfunction setQuestion(question) {\n    return (previousState, currentProps) => {\n      return { ...previousState,\n                    question: question,\n                };\n    };\n}\n\nfunction setSubject(subjectId) {\n    return (previousState, currentProps) => {\n      return { ...previousState,\n                    subjectId: subjectId,\n                };\n    };\n}\n\nclass Questions extends React.Component {\n state = {\n   date: new Date(),\n   show: false,\n   question: '',\n   answer: '',\n   subjectId: 1,\n   alert: 0,\n   validated: false\n }\n\n  handleClose = () => this.setState({ show: false })\n  handleShow = () => this.setState({ show: true })\n  onChange = date => this.setState({ date })\n    \n  updateSaveQuestion = (response) => {\n      console.log(\"updateSaveQuestion: \" + this.state.alert)\n      \n      this.setState({alert: 1})\n      if (response == 1){\n          this.setState({response: \"success\"})\n      }else{\n          this.setState({response: \"danger\"})\n      }\n      \n      console.log(response)\n      console.log(this.state.alert)\n  }\n\n    handleSubmit = (event) => {\n     const form = event.currentTarget;\n     if (form.checkValidity() === false) {\n        event.preventDefault();\n        event.stopPropagation();\n        console.log(\"FALSE\")\n     }else{\n         console.log(\"TRUE\")\n         console.log(form.checkValidity())\n         console.log(this.state.validated)\n         this.setState(setAnswer(event.target.value))\n         this.setState(setAnswer(event.target.value))\n         console.log(this.state.validated)\n         var dd = String(this.state.date.getDate()).padStart(2, '0');\n         var mm = String(this.state.date.getMonth() + 1).padStart(2, '0');\n         var yyyy = this.state.date.getFullYear();\n         var date = yyyy + \"-\" + mm + '-' + dd;\n         Functions.saveQuestion(this.updateSaveQuestion, this.state.question, this.state.answer, date, this.state.subjectId)\n         console.log(\"*****************\")\n     }\n        this.setState({validated: true})\n        //setValidated(true);\n    };\n\n// handleSubmit = () => {\n//    console.log(this.state.date)\n////     this.setState(setAnswer(event.target.value))\n////     this.setState(setAnswer(event.target.value))\n//     console.log(this.state.question)\n//     console.log(this.state.answer)\n//     console.log(this.state.subjectId)\n//\n////     var newdate = new Date(this.state.date.setDate(this.state.date.getDate() - this.state.date.getDay()));\n////     console.log(newdate)\n//     var dd = String(this.state.date.getDate()).padStart(2, '0');\n//     var mm = String(this.state.date.getMonth() + 1).padStart(2, '0');\n//     var yyyy = this.state.date.getFullYear();\n//     var date = yyyy + \"-\" + mm + '-' + dd;\n//\n//\n//////var today = new Date();\n////     var utc = today.getTime() + (today.getTimezoneOffset() * 60000);\n////     today = new Date(utc + (3600000*-5));\n////     var dd = String(today.getDate()).padStart(2, '0');\n////     var mm = String(today.getMonth() + 1).padStart(2, '0');\n////     var yyyy = today.getFullYear();\n////\n//\n//     console.log(date)\n//     Functions.saveQuestion(this.updateSaveQuestion, this.state.question, this.state.answer, date, this.state.subjectId)\n//\n//// }\n    \n get alert() {\n     console.log(this.state.alert + \"//: alert()\")\n     if (this.state.alert > 0){\n         return(\n                <Alert variant={this.state.response} onClose={() => this.setState({alert: 0})} dismissible>\n                  <Alert.Heading>Success!</Alert.Heading>\n                </Alert>\n                )\n     }\n }\n    \n handleAnswer = (event) => {\n    console.log(event.target.value)\n     this.setState(setAnswer(event.target.value))\n     console.log(this.state.answer)\n }\n    \n handleQuestion = (event) => {\n   console.log(event.target.value)\n    this.setState(setQuestion(event.target.value))\n    console.log(this.state.question)\n }\n    \n handleSubject = (event) => {\n//  console.log(event.target.value)\n   this.setState(setSubject(event.target.value))\n   console.log(this.state.subjectId)\n }\n   \n render() {\n   return (\n    <div className=\"App\">\n        <header className=\"App-header\">\n           <div style={{backgroundColor: 'white', top: 57, left: 0, right: 0, height: 150, position: 'absolute'}}/>\n\n           <img src=\"wall.jpg\" resizeMode=\"cover\" alt=\"Logo\" className=\"Header-logo\" alt=\"logo\" style={{width: '100%'}}/>\n           <h1 style={{\n             top: 80,\n             left: 50,\n             position: 'absolute',\n             color: '#50AEA0',\n             fontFamily: 'lucida grande',\n             fontSize: 70,\n           }}>Question of the Day</h1>\n           <Button style={{\n             top: 320,\n             left: 50,\n             position: 'absolute',\n           }}\n             variant=\"primary\" onClick={this.handleShow}>\n             Select Date\n           </Button>\n           <Modal style={{\n             width: 380,\n             left: 50,\n             position: 'absolute'\n            }}\n           show={this.state.show} onHide={this.handleClose}>\n             <Modal.Header closeButton>\n               <Modal.Title >Select Date</Modal.Title>\n             </Modal.Header>\n             <Modal.Body>\n                <div>\n                  <Calendar\n                    onChange={this.onChange}\n                    value={this.state.date}\n                  />\n                </div>\n             </Modal.Body>\n             <Modal.Footer>\n               <Button variant=\"secondary\" onClick={this.handleClose}>\n                 Close\n               </Button>\n               <Button variant=\"primary\" onClick={this.handleClose}>\n                 Save Changes\n               </Button>\n             </Modal.Footer>\n           </Modal>\n           <Jumbotron style={{\n           top: 320,\n           position: 'absolute',\n           \n           }}>\n           <h1 style={{\n           top: 0,\n           position: 'relative',\n           }} style={{color: 'black'}}>\n           Selected Date: {\" \"}\n            <Moment format=\"MMM D, YYYY\">\n            {this.state.date}\n            </Moment>\n            </h1>\n             <p style={{\n             top: 50,\n             position: 'relative',\n             }}>\n            {this.alert}\n           </p>\n\n           <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n            <Form.Group controlId=\"Question\">\n           <Form.Label style={{color: 'black'}}>Question: </Form.Label>\n                <Form.Control type=\"text\" placeholder=\"\" value={this.state.question} onChange={this.handleQuestion} required/>\n           <Form.Control.Feedback type=\"invalid\">\n             Please provide a valid question.\n           </Form.Control.Feedback>\n           \n           </Form.Group>\n            <Form.Group controlId=\"Answer\"  >\n              <Form.Label style={{color: 'black'}}>Answer: </Form.Label>\n              <Form.Control type=\"text\" placeholder=\"\" value={this.state.answer} onChange={this.handleAnswer} required/>\n            <Form.Control.Feedback type=\"invalid\">\n             Please provide a valid answer.\n            </Form.Control.Feedback>\n            </Form.Group>\n\n           <Form.Group controlId=\"Subject\">\n             <Form.Label style={{color: 'black'}}>Subject</Form.Label>\n               <Form.Control as=\"select\" value={this.state.subject} onChange={this.handleSubject}>\n               <option value={1}>English</option>\n               <option value={2}>Math</option>\n             </Form.Control>\n           </Form.Group>\n\n     \n               <Button type=\"submit\">Submit</Button>\n           </Form>\n\n           </Jumbotron>\n           </header>\n           </div>\n   );\n }\n}\nexport default Questions\n","import React from 'react';\nimport { Button, Modal, Jumbotron, InputGroup, FormControl, Form } from 'react-bootstrap';\nimport Functions from './functions'\nimport Moment from 'react-moment';\n\nclass UpcomingExams extends React.Component {\n    constructor(props) {\n      super(props)\n      //: Bind new functions for next and previous\n        this.state = {\n          exams: [],\n         }\n    }\n      \n    \n    \nrender() {\n   const { params } = this.props.match\n      return (\n         <div className=\"App\">\n               <header className=\"App-header\">\n              <div style={{backgroundColor: 'white', top: 57, left: 0, right: 0, height: 150, position: 'absolute'}}/>\n\n       <img src=\"wall.jpg\" alt=\"Logo\" className=\"Header-logo\" alt=\"logo\"  style={{width: '100%'}}/>\n              <h1 style={{\n                    top: 80,\n                    left: 50,\n                    position: 'absolute',\n                    color: '#50AEA0',\n                    fontFamily: 'lucida grande',\n                    fontSize: 70,\n                  }}>Upcoming Exams</h1>\n\n                  <div style={{\n                    top: 240,\n                    width: '80%',\n                    position: 'absolute',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                    }}>\n                <List/>\n              </div>\n              </header>\n         </div>\n      )\n   }\n}\n\nclass List extends React.Component {\n      constructor(props) {\n        super(props)\n        //: Bind new functions for next and previous\n          this.state = {\n            items: [],\n           }\n          this.updateUpcomingExams = this.updateUpcomingExams.bind(this)\n      }\n    updateUpcomingExams = (results) => {\n        console.log(results)\n        this.setState({items: results})\n        this.forceUpdate()\n    }\n    \n    componentDidMount() {\n      Functions.upcomingExams(this.updateUpcomingExams)\n     }\n    \n    render() {\n        let items = this.state.items\n        console.log(items)\n//        console.log(this.props.exams)\n        return(\n               <ul>\n                 {\n               items.map((item, i) => <ListItem key={i} value={item}/>)\n                 }\n               </ul>\n        )\n    }\n    \n}\n               \nclass ListItem extends React.Component {\n constructor(props) {\n   super(props)\n   //Bind new functions for next and previous\n     this.state = {\n       termCount: 0,\n       questionType: ''\n      }\n     this.handleChange = this.handleChange.bind(this)\n }\n\n   handleChange = (event) => {\n       console.log(event)\n       this.props.handleChange(event)\n       //this.setState(setParams(event.target.id, event.target.value))\n       this.setState({questionType: event.target.value})\n       //console.log(quiz)\n       //this.setState({quizzes: []})\n       //quizzes.push(quiz)\n       //this.setState(setQuiz(quizzes))\n       //console.log(this.state.quizzes)\n   }\n\nrender() {\n               console.log(\"LIST ITEM\")\n   return(\n                 <li>\n                   <Jumbotron style={{\n//                      top: 100,\n                        width: 700,\n                        height: 300\n                       }}>\n          <img src={this.props.value.IMAGE} style={{\n          width: 100,\n          height: 100,\n          left: -230,\n          top: 0,\n          position: 'relative'\n          }}/>\n           <h1 style={{\n           top: 0,\n           position: 'relative',\n           color: 'black',\n           left: -100,\n            top: -100,\n           }}>\n                        {this.props.value.TYPE}\n            </h1>\n             <h3 style={{\n             top: 10,\n             position: 'relative',\n             color: 'black',\n             fontSize: 23,\n             left: 40,\n             top: -90,\n             }}>\n          \n            <div>\n                {this.props.value.NAME}\n            </div>\n             </h3>\n             <p style={{\n             top: -60,\n             left: -60,\n             position: 'relative',\n             color: 'black'\n             }}>     <Moment format=\"MMM D, YYYY\">\n                    {this.props.value.DATE}\n                    </Moment>\n                     </p>\n                   </Jumbotron>\n               </li>\n          )\n        }\n     }\n\n\n\nexport default UpcomingExams\n\n","import React from 'react';\nimport { Button, Modal, Jumbotron, InputGroup, FormControl, Form, Alert } from 'react-bootstrap';\nimport FlatList from 'flatlist-react';\nimport Functions from './functions'\n \nfunction setQuiz(quizzes) {\n    return (previousState, currentProps) => {\n      return { ...previousState,\n                    quizzes: quizzes,\n                };\n    };\n}\n\nfunction setParams(id, value) {\n    return (previousState, currentProps) => {\n        if (id == 'termCount'){\n            return { ...previousState,\n                    termCount: value,\n            };\n        }else if (id == 'examType'){\n            return { ...previousState,\n                    examType: value,\n            };\n        }else if (id == 'subject'){\n            return { ...previousState,\n                    subject: value,\n            };\n        }else if (id == 'image'){\n            return { ...previousState,\n                    image: value,\n            };\n    }\n    }\n}\n\nfunction setQuestion(id, value) {\n    console.log(\"id: \" + id + \" | value: \" + value)\n    return (previousState, currentProps) => {\n        if (id == 'Question'){\n            return { ...previousState,\n                    question: value,\n            };\n        }else if (id == 'questionType'){\n            return { ...previousState,\n                    questionType: value,\n            };\n        }else if (id == 'Answer'){\n            return { ...previousState,\n                    answer: value,\n            };\n        }else if (id == 'image'){\n            return { ...previousState,\n                    image: value,\n            };\n        }else if( id=='AnswerA'){\n            return { ...previousState,\n                          answerA: value,\n                  };\n        }else if( id=='AnswerB'){\n            return { ...previousState,\n                          answerB: value,\n                  };\n        }else if( id=='AnswerC'){\n            return { ...previousState,\n                          answerC: value,\n                  };\n        }else if( id=='AnswerD'){\n            return { ...previousState,\n                          answerD: value,\n                  };\n        }\n    }\n}\n\nfunction setQuestions(questions) {\n    console.log(\"questions: \" + questions)\n    return (previousState, currentProps) => {\n        return { ...previousState,\n            questions: questions,\n        }\n    }\n}\n\n\nfunction emptyQuestion() {\n//    console.log(\"questions: \" + questions)\n    return (previousState, currentProps) => {\n            return { ...previousState,\n                    question: '',\n                    questionType: '',\n                    answer: '',\n                    image: '',\n                    answerA: '',\n                    answerB: '',\n                    answerC: '',\n                    answerD: '',\n            };\n    }\n}\n\nclass Quizzes extends React.Component {\n    constructor(props) {\n      super(props)\n      // Bind new functions for next and previous\n        this.state = {\n           currentStep: 1,\n           show: false,\n           examType: 'ACT',\n           subject: 'English',\n           termCount: 0,\n           image: '',\n           quizzes: [],\n           questions: [],\n           question: '',\n           questionType: '1',\n           answer: '',\n           answerA: '',\n           answerB: '',\n           answerC: '',\n           answerD: '',\n           editQuestion: {questionType: '', answer: '', answerA: '', answerB: '', answerC: '', answerD: '',  image: '', question: ''},\n           showAlert: false,\n           response: 0,\n           alert: 0\n         }\n    \n      this._createQuiz = this._createQuiz.bind(this)\n      this._prev = this._prev.bind(this)\n      this.handleChange = this.handleChange.bind(this)\n      this.handleQuestions = this.handleQuestions.bind(this)\n      this.handleItemClick = this.handleItemClick.bind(this)\n      this.onSubmit = this.onSubmit.bind(this)\n      this.updateSaveQuiz = this.updateSaveQuiz.bind(this)\n    }\n\n    handleSubmit = (event) => {\n         const form = event.currentTarget;\n        \n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n            console.log(\"FALSE\")\n        }else{\n            console.log(\"TRUE\")\n            console.log(form.checkValidity())\n            console.log(this.state.validated)\n            //this.setState(setAnswer(event.target.value))\n            //this.setState(setAnswer(event.target.value))\n            console.log(this.state.validated)\n            var dd = String(this.state.date.getDate()).padStart(2, '0');\n            var mm = String(this.state.date.getMonth() + 1).padStart(2, '0');\n            var yyyy = this.state.date.getFullYear();\n            var date = yyyy + \"-\" + mm + '-' + dd;\n            //Functions.saveQuestion(this.updateSaveQuestion, this.state.question, this.state.answer, date, this.state.subjectId)\n            console.log(\"*****************\")\n        }\n           this.setState({validated: true})\n\n\n           //setValidated(true);\n       };\n\n    \n    handleChange = (event) => {\n    //console.log(event)\n    this.setState(setParams(event.target.id, event.target.value))\n    //console.log(quiz)\n    //this.setState({quizzes: []})\n    //quizzes.push(quiz)\n    //this.setState(setQuiz(quizzes))\n    //console.log(this.state.quizzes)\n    }\n    \n    handleQuestions = (event) => {\n        console.log(event)\n        this.setState(setQuestion(event.target.id, event.target.value))\n    //this.setState(setParams(event.target.id, event.target.value))\n    //console.log(quiz)\n    //this.setState({quizzes: []})\n    //quizzes.push(quiz)\n    //this.setState(setQuiz(quizzes))\n    //console.log(this.state.quizzes)\n    }\n\n    editQuestion = (editQuestion) => {\n        this.setState({editQuestion: editQuestion})\n    }\n    \n    handleItemClick = (event) => {\n    //console.log(event)\n    //this.setState(setParams(event.target.id, event.target.value))\n    //console.log(quiz)\n    //this.setState({quizzes: []})\n    //quizzes.push(quiz)\n    //this.setState(setQuiz(quizzes))\n    //console.log(this.state.quizzes)\n        this.setState({termCount: this.state.termCount + 1})\n        console.log(this.state.question + \", \" + this.state.answer + \", \" + this.state.questionType)\n        var question = {question: this.state.question, answer: this.state.answer, questionType: this.state.questionType, answerA: this.state.answerA, answerB: this.state.answerB, answerC: this.state.answerC, answerD: this.state.answerD}\n        var questions = this.state.questions\n        questions.push(question)\n        this.setState(setQuestions(questions))\n        console.log(this.state.questions)\n        this.setState(emptyQuestion())\n    }\n    \n    onEdit() {\n        //console.log('')\n        this.setState({currentStep: 3})\n    }\n    \n    onReview() {\n        this.setState({currentStep: 4})\n    }\n\n    onReview = (index) => {\n        console.log(\"REVIEW\" + index)\n        let currentStep = this.state.currentStep\n        currentStep = currentStep >= 1 ? 2: currentStep + 1\n        this.setState({\n                currentStep: currentStep\n              })\n    }\n    \n    get alert() {\n        if (this.state.alert > 0){\n            if(this.state.response == 'success') {\n                this.setState({currentStep: 1})\n                let questions = []\n                this.setState({questions: questions})\n                this.setState({question: '', questionType: '1', answer: '', answerA: '', answerB: '', answerC: '', answerD: ''})\n                this.forceUpdate()\n            return(\n                   <Alert style={{top: 240, position: 'absolute'}} variant={this.state.response} onClose={() => this.setState({alert: 0})} dismissible>\n                     <Alert.Heading>Success!</Alert.Heading>\n                   </Alert>\n                   )\n               } else {\n                   this.setState({currentStep: 1})\n                   let questions = []\n                   this.setState({questions: questions})\n                   this.setState({question: '', questionType: '1', answer: '', answerA: '', answerB: '', answerC: '', answerD: ''})\n                   this.forceUpdate()\n               return(\n                      <Alert style={{top: 240, position: 'absolute'}} variant={this.state.response} onClose={() => this.setState({alert: 0})} dismissible>\n                     <Alert.Heading>Error saving quiz!</Alert.Heading>\n                   </Alert>\n                    )\n               }\n        }\n    }\n    \n    updateSaveQuiz(results) {\n        console.log(results)\n        this.setState({alert: 1})\n        if (results.length > 0) {\n            this.setState({response: \"success\"})\n        } else {\n            this.setState({response: \"danger\"})\n        }\n    }\n    \n    onSubmit() {\n        var subjectId = 1\n        console.log(this.state.subject)\n        \n        if (this.state.subject == 'English') {\n            subjectId = 1\n        }else{\n            subjectId = 2\n        }\n        \n        console.log(this.state.examType + \" \" + this.state.subject + \" \" + this.state.termCount + \" \" + this.state.image + \" \" + subjectId + \" \" + this.state.questions)\n        Functions.saveQuiz(this.updateSaveQuiz, this.state.examType, this.state.subject, this.state.termCount, this.state.image, subjectId, this.state.questions)\n    }\n\n    _createQuiz() {\n      console.log(this.state.examType + this.state.subject + this.state.termCount + this.state.image)\n      let quiz = {examType: this.state.examType, subject: this.state.subject, termCount: this.state.termCount, image: this.state.image}\n//      this.setState({quizzes: []})\n      let quizzes = this.state.quizzes\n      quizzes.push(quiz)\n      this.setState(setQuiz(quizzes))\n      console.log(this.state.quizzes)\n//      let currentStep = this.state.currentStep\n//      // If the current step is 1 or 2, then add one on \"next\" button click\n//      currentStep = currentStep >= 1 ? 2: currentStep + 1\n//      this.setState({\n//        currentStep: currentStep\n//      })\n        this.setState({ show: false })\n    }\n      \n    _prev() {\n      let currentStep = this.state.currentStep\n      // If the current step is 2 or 3, then subtract one on \"previous\" button click\n      currentStep = currentStep <= 1 ? 1: currentStep - 1\n      this.setState({\n        currentStep: currentStep\n      })\n    }\n    \n//    _createQuiz() {\n//        console.log(this.state)\n//    }\n    \n//    get jumbotron() {\n//        console.log(this.state.quizzes.length)\n//        for (var i = 0; i < this.state.quizzes.length; i++) {\n//        return (\n//                <>\n//                <Jumbotron style={{\n//    //                top: 400,\n//    //                position: 'absolute',\n//    //                left: 120\n//                }}>\n//                <h1 style={{\n//                top: 0,\n//                position: 'relative',\n//                }}>\n//                 </h1>\n//                  <p style={{\n//                  top: 50,\n//                  position: 'relative',\n//                  }}>\n//                 <InputGroup className=\"mb-3\">\n//                  <InputGroup.Prepend>\n//                    <InputGroup.Text id=\"basic-addon1\">Question:</InputGroup.Text>\n//                  </InputGroup.Prepend>\n//                  <FormControl\n//                    placeholder=\"Question\"\n//                    aria-label=\"Question\"\n//                    aria-describedby=\"basic-addon1\"\n//                  />\n//                 </InputGroup>\n//\n//                    <InputGroup className=\"mb-3\">\n//                          <InputGroup.Prepend>\n//                            <InputGroup.Text id=\"basic-addon1\">Description:</InputGroup.Text>\n//                          </InputGroup.Prepend>\n//                          <FormControl\n//                             as=\"textarea\"\n//                            placeholder=\"Description\"\n//                            aria-label=\"Description\"\n//                            aria-describedby=\"basic-addon1\"\n//                          />\n//                         </InputGroup>\n//                  </p>\n//                  <p style={{\n//                  top: 50,\n//                  position: 'relative',\n//                  }}>\n//                    <Button variant=\"primary\">Submit</Button>\n//                  </p>\n//                </Jumbotron>\n//                </>\n//                )\n//                }\n//    }\n    \n    get nextButton(){\n      let currentStep = this.state.currentStep;\n      // If the current step is not 3, then render the \"next\" button\n      // if(currentStep <2){\n        return (\n          <Button variant=\"primary\"\n          onClick={this._createQuiz}>\n          Create\n          </Button>\n        )\n     //      }\n     // ...else render nothing\n     //      return null;\n    }\n    \n    get previousButton(){\n      let currentStep = this.state.currentStep;\n//    sIf the current step is not 1, then render the \"previous\" button\n//      if(currentStep !==1){\n//        return (\n//          <Button variant=\"primary\" onClick={this._prev}>\n//          Previous\n//          </Button>\n//        )\n//      }\n//      // ...else return nothing\n//      return null;\n    }\n    \n     handleClose = () => this.setState({ show: false })\n     handleShow = () => this.setState({ show: true })\n//     next = () => {\n//\n//     }\n    \n//    renderQuiz = (quiz) => {\n//        console.log(\"RENDER QUIZ\")\n//      return (\n//          <li key={this.state.examType}>\n//          <Jumbotron style={{\n//    //top: 400,\n//    //                position: 'absolute',\n//    //                left: 120\n//             }}>\n//             <h1 style={{\n//             top: 0,\n//             position: 'relative',\n//             }}>\n//              </h1>\n//               <p style={{\n//               top: 50,\n//               position: 'relative',\n//               }}>\n//              <InputGroup className=\"mb-3\">\n//               <InputGroup.Prepend>\n//                 <InputGroup.Text id=\"basic-addon1\">Question:</InputGroup.Text>\n//               </InputGroup.Prepend>\n//               <FormControl\n//                 placeholder=\"Question\"\n//                 aria-label=\"Question\"\n//                 aria-describedby=\"basic-addon1\"\n//               />\n//              </InputGroup>\n//\n//                 <InputGroup className=\"mb-3\">\n//                       <InputGroup.Prepend>\n//                         <InputGroup.Text id=\"basic-addon1\">Description:</InputGroup.Text>\n//                       </InputGroup.Prepend>\n//                       <FormControl\n//                          as=\"textarea\"\n//                         placeholder=\"Description\"\n//                         aria-label=\"Description\"\n//                         aria-describedby=\"basic-addon1\"\n//                       />\n//                      </InputGroup>\n//               </p>\n//               <p style={{\n//               top: 50,\n//               position: 'relative',\n//               }}>\n//                 <Button variant=\"primary\">Submit</Button>\n//               </p>\n//             </Jumbotron>\n//          </li>\n//      );\n//    }\n    \n\nrender() {\n    \n   const { params } = this.props.match\n      return (\n            <div className=\"App\">\n              <header className=\"App-header\">\n              <div style={{backgroundColor: 'white', top: 57, left: 0, right: 0, height: 150, position: 'absolute'}}/>\n\n              <img src=\"wall.jpg\" alt=\"Logo\" className=\"Header-logo\" alt=\"logo\" style={{width: '100%'}}/>\n             <div>\n              <h1 style={{top: 80, left: 50, position: 'absolute', color: '#50AEA0', fontFamily: 'lucida grande', fontSize: 70}}>Quizzes</h1>\n              <p>{params.id}</p>\n             </div>\n              {this.alert}\n\n              <Button style={{\n                     top: 240,\n                     left: 50,\n                     position: 'absolute',\n                   }}\n                     variant=\"primary\" onClick={this.handleShow}>\n                     New Quiz\n                   </Button>\n            <Modal style={{\n             }}\n            show={this.state.show} onHide={this.handleClose}>\n              <Modal.Header closeButton>\n                <Modal.Title>New Quiz</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                 <div>\n              \n              <Step1\n                  currentStep={this.state.currentStep}\n                  handleChange={this.handleChange}\n              />\n              </div>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={this.handleClose}>\n                  Close\n                </Button>\n                {this.nextButton}\n                {this.previousButton}\n              </Modal.Footer>\n            </Modal>\n              <div  style={{\n                           top: 320,\n                           width: '80%',\n                           position: 'absolute'\n                           }}>\n              <List\n              items={this.state.quizzes} onItemClick={this.handleItemClick} handleQuestions={this.handleQuestions} questionType={this.state.questionType} termCount={this.state.termCount} onReview={this.onReview} editQuestion={() => this.editQuestion()} currentStep={this.state.currentStep} questions={this.state.questions} onEdit={this.onEdit} onSubmit={this.onSubmit}/>\n              </div>\n              </header>\n\n            </div>\n      )\n   }\n}\n\nclass ListItem extends React.Component {\n      constructor(props) {\n        super(props)\n        // Bind new functions for next and previous\n          this.state = {\n            termCount: 0,\n            questionType: ''\n           }\n          this.handleChange = this.handleChange.bind(this)\n      }\n\n        handleChange = (event) => {\n            console.log(event)\n            this.props.handleChange(event)\n            //this.setState(setParams(event.target.id, event.target.value))\n            this.setState({questionType: event.target.value})\n            //console.log(quiz)\n            //this.setState({quizzes: []})\n            //quizzes.push(quiz)\n            //this.setState(setQuiz(quizzes))\n            //console.log(this.state.quizzes)\n        }\n    \n    onClickAdd = () => {\n        console.log('add')\n    }\n\n    get answer(){\n      let questionType = this.props.questionType;\n        console.log(questionType)\n      // If the current step is not 3, then render the \"next\" button\n      // if(currentStep <2){\n        if (questionType == '3'){\n            return (\n            <>\n                <Form.Group controlId=\"AnswerA\">\n                    <Form.Control type=\"text\" placeholder=\"Answer\" value={this.props.answer} onChange={this.props.handleQuestions}/>\n                  </Form.Group>\n                    <Form.Check\n                     type=\"radio\"\n                     label=\"True\"\n                     name=\"formHorizontalRadios\"\n                     id=\"Answer\"\n                     value=\"True\"\n                    style={{color: 'black'}}\n                     onChange={this.props.handleQuestions}\n                   />\n                   <Form.Check\n                     type=\"radio\"\n                     label=\"False\"\n                     name=\"formHorizontalRadios\"\n                     id=\"Answer\"\n                     value=\"False\"\n                    style={{color: 'black'}}\n                    onChange={this.props.handleQuestions}\n                   />\n                    </>\n            )\n        }else if(questionType == '2'){\n            return (\n                   <>\n                   <Form.Group controlId=\"AnswerA\">\n                               <Form.Control type=\"text\" placeholder=\"Answer 1\" value={this.props.answer} onChange={this.props.handleQuestions}/>\n                             </Form.Group>\n                    <Form.Group controlId=\"AnswerB\">\n                                 <Form.Control type=\"text\" placeholder=\"Answer 2\" value={this.props.answer} onChange={this.props.handleQuestions}/>\n                               </Form.Group>\n                    <Form.Group controlId=\"AnswerC\">\n                                 <Form.Control type=\"text\" placeholder=\"Answer 3\" value={this.props.answer} onChange={this.props.handleQuestions}/>\n                               </Form.Group>\n                    <Form.Group controlId=\"AnswerD\">\n                                 <Form.Control type=\"text\" placeholder=\"Answer 4\" value={this.props.answer} onChange={this.props.handleQuestions}/>\n                               </Form.Group>\n                    \n                    <Form.Check\n                      type=\"radio\"\n                      label=\"A\"\n                      name=\"formHorizontalRadios\"\n                      id=\"Answer\"\n                      value=\"A\"\n                    style={{color: 'black'}}\n                      onChange={this.props.handleQuestions}\n                    />\n                    <Form.Check\n                      type=\"radio\"\n                      label=\"B\"\n                      name=\"formHorizontalRadios\"\n                      id=\"Answer\"\n                      value=\"B\"\n                    style={{color: 'black'}}\n                     onChange={this.props.handleQuestions}\n                    />\n                    <Form.Check\n                      type=\"radio\"\n                      label=\"C\"\n                      name=\"formHorizontalRadios\"\n                      id=\"Answer\"\n                      value=\"C\"\n                    style={{color: 'black'}}\n                     onChange={this.props.handleQuestions}\n                    />\n                    <Form.Check\n                       type=\"radio\"\n                       label=\"D\"\n                       name=\"formHorizontalRadios\"\n                       id=\"Answer\"\n                       value=\"D\"\n                    style={{color: 'black'}}\n                       onChange={this.props.handleQuestions}\n                    />\n                    </>\n            )\n        }else{\n            return (\n                    <>\n                    <Form.Group controlId=\"Answer\">\n                      <Form.Control type=\"text\" placeholder=\"Answer\" value={this.props.answer} onChange={this.props.handleQuestions}/>\n                    </Form.Group>\n                    </>\n            )\n        }\n     //      }\n     // ...else render nothing\n     //      return null;\n    }\n    \n//    {this.props.value.examType}\n    render() {\n        return(\n                      <li>\n                        <Jumbotron style={{\n                   //top: 400,\n                   //position: 'absolute',\n                   //left: 120\n                            }}>\n                            <h1 style={{\n                            top: 0,\n                            position: 'relative',\n                            color: 'black'\n                            }}>\n                            {this.props.value.examType}{\"  -  \"}{this.props.value.subject}{\"  -  \"}{this.props.termCount}{\" Terms\"}\n                             </h1>\n                              <p style={{\n                              top: 50,\n                              position: 'relative',\n                              }}>\n                                <div>\n                                 <Form>\n                                    <Form.Group controlId=\"Question\">\n                                      <Form.Control type=\"text\" placeholder=\"Question\" value={this.props.question} onChange={this.props.handleQuestions}/>\n                                    </Form.Group>\n                      \n                                    <Form.Group controlId=\"questionType\">\n                                        <Form.Control as=\"select\" value={this.props.questionType} onChange={this.props.handleQuestions}>\n                                        <option value={1}>Written</option>\n                                        <option value={3}>True/False</option>\n                                        <option value={2}>Multiple Choice</option>\n                                      </Form.Control>\n                                    </Form.Group>\n                                    {this.answer}\n                                  </Form>\n                                 </div>\n                          </p>\n                          <p style={{\n                          top: 50,\n                          position: 'relative',\n                          }}>\n                            <Button variant=\"primary\" onClick={this.props.onClick}>Add Question</Button>\n                            <Button style={{right: 0, position: 'absolute'}} variant=\"primary\" onClick={this.props.onReview}>Review</Button>\n                          </p>\n                        </Jumbotron>\n                    </li>\n               )\n    }\n    \n}\n\nclass Questions extends React.Component {\n      constructor(props) {\n        super(props)\n        // Bind new functions for next and previous\n          this.state = {\n            termCount: 0,\n            questionType: ''\n           }\n          this.handleChange = this.handleChange.bind(this)\n      }\n\n    handleChange = (event) => {\n        console.log(event)\n        this.props.handleChange(event)\n    //this.setState(setParams(event.target.id, event.target.value))\n        this.setState({questionType: event.target.value})\n    //console.log(quiz)\n    //this.setState({quizzes: []})\n    //quizzes.push(quiz)\n    //this.setState(setQuiz(quizzes))\n    //console.log(this.state.quizzes)\n    }\n    \n    onClickAdd = () => {\n        console.log('add')\n    }\n    \n     renderQuestion(questionType){\n        if(questionType == '1'){\n            return \"Written\"\n        }else if(questionType == '3'){\n            return \"True/False\"\n        }else{\n            return \"Multiple Choice\"\n        }\n    }\n    \n     renderAnswers(question){\n         if (question.questionType == '2'){\n            return (\n                <>\n                 <p>\n                 answer A: {question.answerA}\n                 </p>\n                 <p>\n                 answer B:  {question.answerB}\n                 </p>\n                 <p>\n                  answer C: {question.answerC}\n                 </p>\n                 <p>\n                 answer D: {question.answerD}\n                 </p>\n                </>\n            )\n        }\n     }\n\n    get answer(){\n      let questionType = this.props.questionType;\n        console.log(questionType)\n      // If the current step is not 3, then render the \"next\" button\n      // if(currentStep <2){\n        if (questionType == '2'){\n            return (\n                <>\n                <Form.Group controlId=\"AnswerA\">\n                    <Form.Control type=\"text\" placeholder=\"Answer\" value={this.props.answer} onChange={this.props.handleQuestions}/>\n                  </Form.Group>\n                    <Form.Check\n                     type=\"radio\"\n                     label=\"True\"\n                     name=\"formHorizontalRadios\"\n                     id=\"Answer\"\n                     value=\"True\"\n                    onChange={this.props.handleQuestions}\n                   />\n                   <Form.Check\n                     type=\"radio\"\n                     label=\"False\"\n                     name=\"formHorizontalRadios\"\n                     id=\"Answer\"\n                     value=\"False\"\n                    onChange={this.props.handleQuestions}\n                   />\n                </>\n            )\n        }else if(questionType == '3'){\n            return (\n                   <>\n                   <Form.Group controlId=\"AnswerA\">\n                      <Form.Control type=\"text\" placeholder=\"Answer A\" value={this.props.answer} onChange={this.props.handleQuestions}/>\n                     </Form.Group>\n                    <Form.Group controlId=\"AnswerB\">\n                     <Form.Control type=\"text\" placeholder=\"Answer B\" value={this.props.answer} onChange={this.props.handleQuestions}/>\n                   </Form.Group>\n                    <Form.Group controlId=\"AnswerC\">\n                     <Form.Control type=\"text\" placeholder=\"Answer C\" value={this.props.answer} onChange={this.props.handleQuestions}/>\n                   </Form.Group>\n                    <Form.Group controlId=\"AnswerD\">\n                     <Form.Control type=\"text\" placeholder=\"Answer D\" value={this.props.answer} onChange={this.props.handleQuestions}/>\n                   </Form.Group>\n                    <Form.Check\n                      type=\"radio\"\n                      label=\"A\"\n                      name=\"formHorizontalRadios\"\n                      id=\"Answer\"\n                    value=\"A\"\n                     onChange={this.props.handleQuestions}\n                    />\n                    <Form.Check\n                      type=\"radio\"\n                      label=\"B\"\n                      name=\"formHorizontalRadios\"\n                      id=\"Answer\"\n                    value=\"B\"\n                     onChange={this.props.handleQuestions}\n                    />\n                    <Form.Check\n                      type=\"radio\"\n                      label=\"C\"\n                      name=\"formHorizontalRadios\"\n                      id=\"Answer\"\n                      value=\"C\"\n                     onChange={this.props.handleQuestions}\n                    />\n                    <Form.Check\n                       type=\"radio\"\n                       label=\"D\"\n                       name=\"formHorizontalRadios\"\n                       id=\"Answer\"\n                       value=\"D\"\n                       onChange={this.props.handleQuestions}\n                    />\n                    </>\n            )\n        }else{\n            return (\n                    <>\n                    <Form.Group controlId=\"Answer\">\n                      <Form.Control type=\"text\" placeholder=\"Answer\" value={this.props.answer} onChange={this.props.handleQuestions}/>\n                    </Form.Group>\n                    </>\n            )\n        }\n     //      }\n     // ...else render nothing\n     //      return null;\n    }\n    \n\n    \n        //:-{this.props.value.examType}\n    render() {\n        //:-console.log('ASDFEWSX')\n        console.log(this.props.questions)\n        return(\n               <>\n               <Button style={{right: 0, top: -50, position: 'absolute'}} variant=\"primary\" onClick={this.props.onSubmit}>Submit</Button>\n\n                        <li>\n                         <Jumbotron style={{\n                               //top: 400,\n                               //position: 'absolute',\n                               //left: 120\n                            }}>\n                            <h4 style={{\n                                top: 0,\n                                position: 'relative',\n                                color: 'black'\n                            }}>\n                              Question: {this.props.questions.question}\n                             </h4>\n                              <h4 style={{\n                                  top: 0,\n                                  position: 'relative',\n                                  color: 'black'\n                              }}>\n                               Answer: {this.props.questions.answer}\n                            </h4>\n                                <h4  style={{\n                                    top: 0,\n                                    position: 'relative',\n                                    color: 'black'\n                                }}>\n                               Question Type: {this.renderQuestion(this.props.questions.questionType)}\n                               </h4>\n                                {this.renderAnswers(this.props.questions)}\n\n                              <h4 style={{\n                                  top: 50,\n                                  position: 'relative',\n                                  color: 'black'\n                              }}>\n                          </h4>\n                        </Jumbotron>\n                    </li>\n               </>\n               )\n    }\n    \n}\n\nclass List extends React.Component {\n      constructor(props) {\n        super(props)\n        //: Bind new functions for next and previous\n          this.state = {\n            item: [],\n           }\n      }\n    \n    render() {\n        let items = this.props.items\n        let questions = this.props.questions\n        console.log(this.props.questionType)\n            \n        if (this.props.currentStep == 2) { // Prop: The current step\n              return(\n                     <ul>\n                       {\n                     questions.map((item, i) => <Questions key={i} value={item} onClick={this.props.onItemClick} questions={this.props.questions[i]} onSubmit={this.props.onSubmit}/>)\n                       }\n                     </ul>\n                    )\n         }else if (this.props.currentStep == 3){\n              return(\n                     <Jumbotron style={{\n                           //top: 400,\n                           //position: 'absolute',\n                           //left: 120\n                        }}>\n                        <h4 style={{\n                            top: 0,\n                            position: 'relative',\n                        }}>\n//                          Question: {this.props.questions.question}\n                         </h4>\n                          <p style={{\n                              top: 0,\n                              position: 'relative',\n                          }}>\n//                           Answer: {this.props.questions.answer}\n                        </p>\n                           <p>\n//                           Question Type: {this.renderQuestion(this.props.questions.questionType)}\n                           </p>\n//                            {this.renderAnswers(this.props.questions)}\n\n                          <p style={{\n                              top: 50,\n                              position: 'relative',\n                          }}>\n                        <Button style={{left: 0, top: -50, position: 'absolute'}} variant=\"primary\" onClick={this.props.onEdit}>Edit</Button>\n                        <Button style={{right: 0, top: -50, position: 'absolute'}} variant=\"primary\" onClick={this.props.onSubmit}>Submit</Button>\n                      </p>\n                    </Jumbotron>\n                     )\n         }else if (this.props.currentStep == 4){\n              return(\n                     <>\n                     </>\n                    )\n         }\n             \n        return(\n               <ul>\n                 {\n               items.map((item, i) => <ListItem key={i} value={item} onClick={this.props.onItemClick} onReview={this.props.onReview} onEdit={this.props.onEdit} onSubmit={this.props.onSubmit} handleQuestions={this.props.handleQuestions}  questionType={this.props.questionType} termCount={this.props.termCount}/>)\n                 }\n               </ul>\n        )\n    }\n    \n}\n//const ListItem = ({ value, onClick }) => (\n//\n//);\n//\n//const List = ({ items, onItemClick }) => (\n//\n//);\n\n\nclass Step1 extends React.Component {\n      constructor(props) {\n        super(props)\n        // Bind new functions for next and previous\n          this.state = {\n             examType: '',\n             subject: '',\n             termCount: 0,\n              image: '',\n             validated: false\n           }\n          \n            this.handleChange = this.handleChange.bind(this);\n      }\n    \n\n    handleChange(event) {\n      console.log(event.target.id)\n      this.setState({value: event.target.value});\n    }\n    \n  render() {\n//    if (this.props.currentStep !== 1) { // Prop: The current step\n//      return null\n//    }\n    // The markup for the Step 1 UI\n      const handleSubmit = event => {\n         const form = event.currentTarget;\n         if (form.checkValidity() === false) {\n           event.preventDefault();\n           event.stopPropagation();\n         }\n          this.setState({validated: true});\n       };\n      \n//      handleSubmit(event) {\n//        alert('A name was submitted: ' + this.state.value);\n//        event.preventDefault();\n//      }\n    return(\n//      <div className=\"form-group\">\n//        <label htmlFor=\"email\">Email address</label>\n//        <input\n//          className=\"form-control\"\n//          id=\"email\"\n//          name=\"email\"\n//          type=\"text\"\n//          placeholder=\"Enter email\"\n//          value={this.props.email} // Prop: The email input data\n//          onChange={this.props.handleChange} // Prop: Puts data into state\n//        />\n//      </div>\n          <div>\n           <Form>\n            <Form.Group controlId=\"subject\">\n           <Form.Control as=\"select\" value={this.props.subject} onChange={this.props.handleChange}>\n                <option>English</option>\n                <option>Math</option>\n              </Form.Control>\n            </Form.Group>\n              <Form.Group controlId=\"examType\">\n           <Form.Control as=\"select\" value={this.props.examType} onChange={this.props.handleChange}>\n                  <option>ACT</option>\n                  <option>SAT</option>\n                  <option>PSAT</option>\n                </Form.Control>\n              </Form.Group>\n                <Form.Group controlId=\"image\">\n                  <Form.Control type=\"text\" placeholder=\"Image\" value={this.props.image} onChange={this.props.handleChange}/>\n                </Form.Group>\n            </Form>\n           </div>\n    )\n  }\n}\n\n\nclass Step2 extends React.Component {\n  render() {\n    if (this.props.currentStep !== 2) { // Prop: The current step\n      return null\n    }\n    // The markup for the Step 1 UI\n    return(\n//      <div className=\"form-group\">\n//        <label htmlFor=\"email\">Email address</label>\n//        <input\n//          className=\"form-control\"\n//          id=\"email\"\n//          name=\"email\"\n//          type=\"text\"\n//          placeholder=\"Enter email\"\n//          value={this.props.email} // Prop: The email input data\n//          onChange={this.props.handleChange} // Prop: Puts data into state\n//        />\n//      </div>\n           <div>\n           <h5>\n           Subject: {this.props.subject}{\" | Term Count: \"}{this.props.termCount}{\" | Exam Type: \"}{this.props.examType}\n           </h5>\n           <Form>\n             <Form.Group controlId=\"Question\">\n               <Form.Control type=\"text\" placeholder=\"Question\" />\n             </Form.Group>\n             <Form.Group controlId=\"Answer\">\n               <Form.Control type=\"text\" placeholder=\"Answer\" />\n             </Form.Group>\n              <Form.Group controlId=\"Image\">\n                 <Form.Control type=\"text\" placeholder=\"Image\" />\n               </Form.Group>\n           </Form>\n           </div>\n    )\n  }\n}\n\n\nexport default Quizzes\n\n","import React from 'react';\nimport { Button, Modal, Jumbotron, InputGroup, FormControl, Form } from 'react-bootstrap';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n      super(props)\n      //: Bind new functions for next and previous\n        this.state = {\n          item: [],\n         }\n    }\n      \n    componentDidMount() {\n      console.log('');\n    }\n\nrender() {\n   const { params } = this.props.match\n      return (\n         <div className=\"App\">\n               <header className=\"App-header\">\n              <h1 style={{\n                    top: 80,\n                    left: 50,\n                    position: 'absolute',\n                    color: 'white',\n                    fontFamily: 'lucida grande',\n                    fontSize: 70,\n                  }}>Notifications</h1>\n               <img src=\"wall.jpg\" alt=\"Logo\" className=\"Header-logo\" alt=\"logo\" />\n              <List\n                 />\n              </header>\n         </div>\n      )\n   }\n}\n\nclass List extends React.Component {\n      constructor(props) {\n        super(props)\n        //: Bind new functions for next and previous\n          this.state = {\n            item: [],\n           }\n      }\n    \n//    let items = this.props.items\n\n    render() {\n\n             \n        return(\n               <ul>\n                 {\n//               items.map((item, i) => <ListItem key={i} value={item} onClick={this.props.onItemClick} onReview={this.props.onReview} onEdit={this.props.onEdit} onSubmit={this.props.onSubmit} handleQuestions={this.props.handleQuestions}  questionType={this.props.questionType} termCount={this.props.termCount}/>)\n                 }\n               </ul>\n        )\n    }\n    \n}\n               \nclass ListItem extends React.Component {\n constructor(props) {\n   super(props)\n   // Bind new functions for next and previous\n     this.state = {\n       termCount: 0,\n       questionType: ''\n      }\n     this.handleChange = this.handleChange.bind(this)\n }\n\n   handleChange = (event) => {\n       console.log(event)\n       this.props.handleChange(event)\n       //this.setState(setParams(event.target.id, event.target.value))\n       this.setState({questionType: event.target.value})\n       //console.log(quiz)\n       //this.setState({quizzes: []})\n       //quizzes.push(quiz)\n       //this.setState(setQuiz(quizzes))\n       //console.log(this.state.quizzes)\n   }\n\nonClickAdd = () => {\n   console.log('add')\n}\n\nrender() {\n   return(\n                 <li>\n                   <Jumbotron style={{\n              //top: 400,\n              //position: 'absolute',\n              //left: 120\n                       }}>\n                       <h1 style={{\n                       top: 0,\n                       position: 'relative',\n                       color: 'black'\n                       }}>\n                        </h1>\n                         <p style={{\n                         top: 50,\n                         position: 'relative',\n                         }}>\n                           <div>\n                            \n                            </div>\n                     </p>\n                     <p style={{\n                     top: 50,\n                     position: 'relative',\n                     }}>\n                       <Button variant=\"primary\">Add Question</Button>\n                       <Button style={{right: 0, position: 'absolute'}} variant=\"primary\">Review</Button>\n                     </p>\n                   </Jumbotron>\n               </li>\n          )\n        }\n    }\n\n\nexport default Notifications\n\n","import React from 'react';\nimport { Button, Modal, Jumbotron, InputGroup, FormControl, Form, Container, Row, Col, } from 'react-bootstrap';\nimport { FilePicker } from 'react-file-picker'\nimport S3 from 'react-aws-s3';\nimport Moment from 'react-moment';\n\nfunction buildFileSelector(){\n  const fileSelector = document.createElement('input');\n  fileSelector.setAttribute('type', 'file');\n  fileSelector.setAttribute('multiple', 'multiple');\n    console.log(fileSelector)\n  return fileSelector;\n}\n\n\nconst options = {\n  keyPrefix: \"docs\",\n  bucket: \"elasticbeanstalk-us-east-2-560941559211\",\n  region: \"us-east-2\",\n  accessKey: \"AKIAJ7MJAPPP45V3UHHA\",\n  secretKey: \"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\",\n  successActionStatus: 201\n}\n\nconst config = {\n    bucketName: \"elasticbeanstalk-us-east-2-560941559211\",\n    dirName: 'docs', /* optional */\n    region:  \"us-east-2\",\n    accessKeyId: \"AKIAJ7MJAPPP45V3UHHA\",\n    secretAccessKey: \"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\",\n}\n\n\nclass Docs extends React.Component {\n    constructor(props: any)\n       {\n           super(props);\n           this.handleChange = this.handleChange.bind(this);\n           this.handleTermsAndConditions = this.handleTermsAndConditions.bind(this);\n           this.handlePrivacyPolicy = this.handlePrivacyPolicy.bind(this);\n           this.handleFAQs = this.handleFAQs.bind(this);\n           this.handleAbout = this.handleAbout.bind(this);\n\n       }\n\n    \n    componentDidMount(){\n//      this.fileSelector = buildFileSelector();\n    }\n    \n    handleChange(selectorFiles: FileList)\n    {\n        console.log(selectorFiles);\n    }\n    \n    handleTermsAndConditions(FileObject) {\n        console.log(FileObject);\n        var date = new Date();\n        //date.format(\"Do MMMM YYYY\");\n        const ReactS3Client = new S3(config);\n        var dd = String(date.getDate()).padStart(2, '0');\n        var mm = String(date.getMonth() + 1).padStart(2, '0');\n        var yyyy = date.getFullYear();\n        date = yyyy + \"-\" + mm + '-' + dd;\n        /* Notice that if you don't provide a dirName, the file will be automatically uploaded to the root of your bucket */\n        /* This is optional */\n        const newFileName = 'TermsAndConditions';\n        ReactS3Client\n        .uploadFile(FileObject, newFileName)\n        .then(data => console.log(data))\n        .catch(err => console.error(err))\n      }\n    \n    handlePrivacyPolicy(FileObject) {\n        console.log(FileObject);\n        var date = new Date();\n        //date.format(\"Do MMMM YYYY\");\n        const ReactS3Client = new S3(config);\n        var dd = String(date.getDate()).padStart(2, '0');\n        var mm = String(date.getMonth() + 1).padStart(2, '0');\n        var yyyy = date.getFullYear();\n        date = yyyy + \"-\" + mm + '-' + dd;\n        /* Notice that if you don't provide a dirName, the file will be automatically uploaded to the root of your bucket */\n        /* This is optional */\n        const newFileName = 'PrivacyPolicy';\n        ReactS3Client\n        .uploadFile(FileObject, newFileName)\n        .then(data => console.log(data))\n        .catch(err => console.error(err))\n    }\n    \n    handleFAQs(FileObject) {\n        console.log(FileObject);\n        var date = new Date();\n        //      date.format(\"Do MMMM YYYY\");\n        const ReactS3Client = new S3(config);\n        var dd = String(date.getDate()).padStart(2, '0');\n        var mm = String(date.getMonth() + 1).padStart(2, '0');\n        var yyyy = date.getFullYear();\n        date = yyyy + \"-\" + mm + '-' + dd;\n        /* Notice that if you don't provide a dirName, the file will be automatically uploaded to the root of your bucket */\n        /* This is optional */\n        const newFileName = 'FAQs';\n        ReactS3Client\n        .uploadFile(FileObject, newFileName)\n        .then(data => console.log(data))\n        .catch(err => console.error(err))\n    }\n    \n    handleAbout(FileObject) {\n        console.log(FileObject);\n        var date = new Date();\n        //      date.format(\"Do MMMM YYYY\");\n        const ReactS3Client = new S3(config);\n        var dd = String(date.getDate()).padStart(2, '0');\n        var mm = String(date.getMonth() + 1).padStart(2, '0');\n        var yyyy = date.getFullYear();\n        date = yyyy + \"-\" + mm + '-' + dd;\n        /* Notice that if you don't provide a dirName, the file will be automatically uploaded to the root of your bucket */\n        /* This is optional */\n        const newFileName = 'About';\n        ReactS3Client\n        .uploadFile(FileObject, newFileName)\n        .then(data => console.log(data))\n        .catch(err => console.error(err))\n    }\n    \n//    handleFileSelect = (e) => {\n//       e.preventDefault();\n//       this.fileSelector.click();\n//     }\n//\n//\n//    _pickImage = async () => {\n//           let result = await ImagePicker.launchImageLibraryAsync({\n//             mediaTypes: ImagePicker.MediaTypeOptions.Images,\n//             allowsEditing: true,\n//             aspect: [4, 3],\n//             quality: 1,\n//             base64: true\n//           });\n//\n//           if (!result.cancelled) {\n//               this.setState({image: result.uri})\n//               let now = Moment().format('MM-DD-YYYY')\n//               const file = {\n//                       uri: result.uri,\n//                       name: this.state.firstName+'_'+this.state.lastName+\"_(\"+now+\").png\",\n//                       type: \"image/png\"\n//                     }\n//               RNS3.put(file, options).then(response => {\n//                 if (response.status !== 201)\n//                   throw new Error(\"Failed to upload image to S3\");\n//                  AsyncStorage.getItem('access_token').then((token) => {\n//                  Functions.updateImage(token, this.updateImage, response.body.postResponse.location, this.state.id);\n//                });\n//               });\n//           }\n//         };\n\n    \nrender() {\n   const { params } = this.props.match\n      return (\n         <div className=\"App\">\n            <header className=\"App-header\">\n\n              <div style={{backgroundColor: 'white', top: 57, left: 0, right: 0, height: 150, position: 'absolute'}}/>\n\n              <h1 style={{\n                    top: 80,\n                    left: 50,\n                    position: 'absolute',\n                    color: '#50AEA0',\n                    fontFamily: 'lucida grande',\n                    fontSize: 70,\n                  }}>Docs </h1>\n               <img src=\"wall.jpg\" alt=\"Logo\" resizeMode='cover' className=\"Header-logo\" alt=\"logo\"  style={{width: '100%'}}/>\n              <div style={{\n                     top: 240,\n                     width: '80%',\n                     position: 'absolute',\n                     justifyContent: 'center',\n                     alignItems: 'center'\n                     }}>\n              <Container>\n              <Row>\n                 <Col>\n                    <FilePicker\n                         extensions={['pdf']}\n                         onChange={FileObject => (this.handleTermsAndConditions(FileObject))}\n                         onError={errMsg => (console.log('error'))}>\n                      <Button variant=\"primary\">\n                       Terms & Conditions\n                       </Button>\n                      </FilePicker>\n              \n              \n                    </Col>\n                    <Col>\n                    <FilePicker\n                         extensions={['pdf']}\n                         onChange={FileObject => (this.handlePrivacyPolicy(FileObject))}\n                      onError={errMsg => (console.log('error'))}>\n                        <Button variant=\"primary\">\n                        Privacy Policy\n                        </Button>\n                      </FilePicker></Col>\n                    <Col sm>\n                          <FilePicker\n                          extensions={['pdf']}\n                          onChange={FileObject => (this.handleFAQs(FileObject))}\n                          onError={errMsg => (console.log('error'))}>\n                          <Button variant=\"primary\">\n                          FAQs\n                          </Button>\n                        </FilePicker>\n                    </Col>\n                    <Col>\n                     <FilePicker\n                          extensions={['pdf']}\n                          onChange={FileObject => (this.handlePrivacyPolicy(FileObject))}\n                       onError={errMsg => (console.log('error'))}>\n                         <Button variant=\"primary\">\n                         Privacy Policy\n                         </Button>\n                       </FilePicker>\n                    </Col>\n\n                     <Col>\n                           <FilePicker\n                             extensions={['pdf']}\n                             onChange={FileObject => (this.handleAbout(FileObject))}\n                             onError={errMsg => (console.log('error'))}>\n                               <Button variant=\"primary\">\n                               About\n                               </Button>\n                           </FilePicker>\n                     </Col>\n                    </Row>\n                </Container>\n              </div>\n\n     \n       \n\n\n              \n            <p>{params.id}</p>\n              </header>\n         </div>\n      )\n   }\n}\nexport default Docs\n","\nimport React from 'react'\nconst ErrorPage = () => <h1>Page Not found</h1>\nexport default ErrorPage\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { Route, Link, BrowserRouter, Switch } from 'react-router-dom'\nimport App from './App'\nimport Questions from './Questions'\nimport UpcomingExams from './UpcomingExams'\nimport Quizzes from './Quizzes'\nimport Notifications from './Notifications'\nimport Docs from './Docs'\nimport ErrorPage from './ErrorPage'\nimport * as serviceWorker from './serviceWorker'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Navbar, Nav, Form, FormControl, Alert } from 'react-bootstrap';\nimport Functions from './functions'\nimport { AsyncStorage } from 'AsyncStorage';\n\nconst logOut = () => {\n    console.log('log out')\n}\n\n//const routs = (\n//               <BrowserRouter>\n//                <>\n//                 <Navbar bg=\"dark\" variant=\"dark\">\n//                   <Nav className=\"mr-auto\">\n//                     <Nav.Link href=\"questions\">Question Of the Day</Nav.Link>\n//                     <Nav.Link href=\"exams\">Upcoming Exams</Nav.Link>\n//                     <Nav.Link href=\"quizzes\">Quiz</Nav.Link>\n//                     <Nav.Link href=\"docs\">Docs</Nav.Link>\n//                   </Nav>\n//                   <Form inline>\n//                 <Button variant=\"outline-info\" onClick={logOut}>Log Out</Button>\n//                    </Form>\n//                 </Navbar>\n//                <Switch>\n//                <Route path=\"/questions\" component={Questions} />\n//                <Route path=\"/exams\" component={UpcomingExams} />\n//                <Route path=\"/quizzes\" component={Quizzes} />\n//                <Route path=\"/docs\" component={Docs} />\n//                <Route component={ErrorPage} />\n//                </Switch>\n//                </>\n//               </BrowserRouter>\n//);\n\nclass SignUp extends React.Component {\n    constructor(props) {\n      super(props)\n      //Bind new functions for next and previous\n        this.state = {\n           currentStep: 1,\n           username: '',\n           password: ''\n         }\n        this.handleClick = this.handleClick.bind(this)\n        this.onChangeUsername = this.onChangeUsername.bind(this)\n        this.onChangePassword = this.onChangePassword.bind(this)\n    }\n    \n    onChangeUsername(event) {\n        this.setState({username: event.target.value})\n    }\n    \n    onChangePassword(event) {\n        this.setState({password: event.target.value})\n    }\n    \n    handleClick() {\n        console.log(this.state.username)\n        console.log(this.state.password)\n        Functions.login(this.updateLogin, this.state.username, this.state.password)\n    }\n        \n    render() {\n        console.log(this.state.currentStep)\n            return (\n                      <>\n                        <div className=\"App\">\n                            <header className=\"App-header\">\n                        <img src=\"wall.jpg\" alt=\"Logo\"  resizeMode= 'cover' className=\"Header-logo\" alt=\"logo\" />\n                            <img style={{\n                                top: 50,\n                                height: 100,\n                                width: 230,\n                                left: 80,\n                                position: 'absolute',\n                                color: 'white',\n                                fontFamily: 'lucida grande',\n                                fontSize: 20}}\n                            src=\"wetherbeelogo.jpg\" alt=\"Logo\"  resizeMode= 'cover' className=\"Header-logo\" alt=\"logo\" />\n                        <>\n                        <div style={{\n                          top: 210,\n                          left: 80,\n                          width: 300,\n                          position: 'absolute',\n                          color: 'white',\n                          fontFamily: 'lucida grande',\n                          fontSize: 20,\n                        }}>\n                        <Form.Group controlId=\"Username\">\n                        <Form.Label style={{color: 'black'}}>Username</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Username\" value={this.props.username} onChange={this.props.onChangeUsername} />\n                        </Form.Group>\n                        <Form.Group controlId=\"Password\">\n                           <Form.Label style={{color: 'black'}}>Password</Form.Label>\n                           <Form.Control type=\"text\" placeholder=\"Password\" value={this.props.password} onChange={this.props.onChangePassword} />\n                         </Form.Group>\n                            <Button variant=\"primary\" onClick={this.props.onClick} style={{top: 230, left: 0, position: 'absolute'}}>\n                                Login\n                              </Button>\n                        </div>\n                        </>\n                     </header>\n                    </div>\n                </>\n            )\n     }\n}\n\nclass Router extends React.Component {\n    constructor(props) {\n      super(props)\n      //Bind new functions for next and previous\n        this.state = {\n           currentStep: 1,\n           username: '',\n           password: '',\n           loggedIn: false,\n           username: '',\n           password: '',\n           showAlert: 0\n         }\n        \n        this.handleClick = this.handleClick.bind(this)\n        this.onChangeUsername = this.onChangeUsername.bind(this)\n        this.onChangePassword = this.onChangePassword.bind(this)\n        this.updateLogin = this.updateLogin.bind(this)\n        this.retrieveData = this.retrieveData.bind(this)\n        this._storeData = this._storeData.bind(this)\n        this.logOut = this.logOut.bind(this)\n        this.setAlert = this.setAlert.bind(this)\n    }\n    \n    onChangeUsername(event) {\n        this.setState({username: event.target.value})\n    }\n    \n    onChangePassword(event) {\n        this.setState({password: event.target.value})\n    }\n    \n    retrieveData = async () => {\n      try {\n         const value = await AsyncStorage.getItem('currentStep');\n         if (value !== null) {\n            this.setState({currentStep: value})\n           console.log(value);\n        }\n        } catch (error) {\n         //Error retrieving data\n        }\n    }\n    \n    _storeData = async () => {\n      try {\n        await AsyncStorage.setItem('currentStep', 2);\n      } catch (error) {\n        // Error saving data\n      }\n    };\n    \n    componentDidMount(){\n       this.retrieveData()\n    }\n    \n    updateLogin(results) {\n        console.log(results)\n        if (results.length > 0){\n            this.setState({currentStep: 2})\n            this._storeData()\n        } else {\n            this.setState({showAlert: 1})\n            this.forceUpdate()\n        }\n    }\n    \n     logOut = async () => {\n         console.log('log out')\n         try {\n            await AsyncStorage.setItem('currentStep', 1);\n            this.setState({currentStep: 1})\n            this.forceUpdate()\n         } catch (error) {\n           //Error saving data\n         }\n    }\n    setAlert() {\n        console.log('here')\n        this.setState({showAlert: 0})\n    }\n    \n    handleClick() {\n        console.log(this.state.username)\n        console.log(this.state.password)\n        Functions.login(this.updateLogin, this.state.username, this.state.password)\n    }\n    \n\n    \n    \n    render() {\n        console.log(this.state.currentStep)\n        if (this.state.currentStep == 1) {\n            return (\n                    <LogIn onClick={this.handleClick} username={this.state.username} onChangeUsername={this.onChangeUsername} onChangePassword={this.onChangePassword} showAlert={this.state.showAlert} setAlert={this.setAlert}/>\n                 );\n        }else{\n            return (\n                    <Routes logOut={this.logOut}/>\n             );\n        }\n     }\n}\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n       <>\n        <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"questions\">Question of the Day</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"exams\">Upcoming Exams</Nav.Link>\n            <Nav.Link href=\"quizzes\">Quiz</Nav.Link>\n            <Nav.Link href=\"docs\">Docs</Nav.Link>\n          </Nav>\n          <Form inline>\n        <Button variant=\"outline-info\" onClick={this.props.logOut}>Log Out</Button>\n           </Form>\n        </Navbar>\n       <Switch>\n       <Route path=\"/questions\" component={Questions} />\n       <Route path=\"/exams\" component={UpcomingExams} />\n       <Route path=\"/quizzes\" component={Quizzes} />\n       <Route path=\"/docs\" component={Docs} />\n       <Route component={ErrorPage} />\n       </Switch>\n       </>\n      </BrowserRouter>\n    );\n  }\n}\n\n\nclass LogIn extends React.Component {\n    \n    get alert() {\n        if (this.props.showAlert > 0) {\n                return (\n                <Alert variant=\"danger\" onClose={() => this.props.setAlert()} dismissible>\n                    <Alert.Heading>Please check username and password.</Alert.Heading>\n                  </Alert>\n                );\n              }\n            }\n        \n    \n  render() {\n    return (\n      <>\n            <div className=\"App\">\n            <img src=\"wall.jpg\" alt=\"Logo\"  resizeMode= 'cover' style={{position: 'relative', left: 0, right: 0, top: 0, width: '100%'}} backgroundRepeat= 'repeat' className=\"Header-logo\" alt=\"logo\" />\n            <div style={{backgroundColor: 'white', top: 0, left: 0, right: 0, height: 300, position: 'absolute'}}/>\n            \n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', }}>\n            \n            <img style={{\n                           top: 50,\n                           height: 178.5,\n                           width: 420.5,\n                           position: 'absolute',\n                           color: 'white',\n                           fontFamily: 'lucida grande',\n                           fontSize: 20}}\n                       src=\"wetherbeelogo.jpg\" alt=\"Logo\"  resizeMode= 'cover' className=\"Header-logo\" alt=\"logo\" />\n            </div>\n\n           \n\n        <>\n        <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', }}>\n            \n        <div style={{\n          top: 410,\n          width: 300,\n          position: 'absolute',\n          color: 'white',\n          fontFamily: 'lucida grande',\n          fontSize: 20,\n        }}>\n            {this.alert}\n\n        <Form.Group controlId=\"Username\">\n        <Form.Label style={{color: 'white'}}></Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Username\" value={this.props.username} onChange={this.props.onChangeUsername} />\n        </Form.Group>\n        <Form.Group controlId=\"Password\">\n           <Form.Label style={{color: 'white'}}></Form.Label>\n           <Form.Control type=\"text\" placeholder=\"Password\" type=\"password\" value={this.props.password} onChange={this.props.onChangePassword} />\n         </Form.Group>\n            <Button variant=\"primary\" onClick={this.props.onClick} style={{top: 40, position: 'relative'}}>\n                Login\n              </Button>\n            </div>\n            </div>\n            </>\n            </div>\n      </>\n    );\n  }\n}\n\nReactDOM.render(<Router/>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}